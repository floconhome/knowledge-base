####################
# [
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

No help available

####################
# [[
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

No help available

####################
# acpid
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: acpid [-df] [-c CONFDIR] [-l LOGFILE] [-a ACTIONFILE] [-M MAPFILE] [-e PROC_EVENT_FILE] [-p PIDFILE]

Listen to ACPI events and spawn specific helpers on event arrival

	-d	Log to stderr, not log file (implies -f)
	-f	Run in foreground
	-c DIR	Config directory [/etc/acpi]
	-e FILE	/proc event file [/proc/acpi/event]
	-l FILE	Log file [/var/log/acpid.log]
	-p FILE	Pid file [/var/run/acpid.pid]
	-a FILE	Action file [/etc/acpid.conf]
	-M FILE Map file [/etc/acpi.map]

Accept and ignore compatibility options -g -m -s -S -v

####################
# adjtimex
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: adjtimex [-q] [-o OFS] [-f FREQ] [-p TCONST] [-t TICK]

Read or set kernel time variables. See adjtimex(2)

	-q	Quiet
	-o OFF	Time offset, microseconds
	-f FREQ	Frequency adjust, integer kernel units (65536 is 1ppm)
	-t TICK	Microseconds per tick, usually 10000
		(positive -t or -f values make clock run faster)
	-p TCONST

####################
# ar
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ar x|p|t|r [-ov] ARCHIVE [FILE]...

Extract or list FILEs from an ar archive, or create it

	x	Extract
	p	Extract to stdout
	t	List
	r	Create
	-o	Restore mtime
	-v	Verbose

####################
# arch
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: arch

Print system architecture

####################
# arp
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: arp
[-vn]	[-H HWTYPE] [-i IF] -a [HOSTNAME]
[-v]		    [-i IF] -d HOSTNAME [pub]
[-v]	[-H HWTYPE] [-i IF] -s HOSTNAME HWADDR [temp]
[-v]	[-H HWTYPE] [-i IF] -s HOSTNAME HWADDR [netmask MASK] pub
[-v]	[-H HWTYPE] [-i IF] -Ds HOSTNAME IFACE [netmask MASK] pub

Manipulate ARP cache

	-a		Display (all) hosts
	-d		Delete ARP entry
	-s		Set new entry
	-v		Verbose
	-n		Don't resolve names
	-i IF		Network interface
	-D		Read HWADDR from IFACE
	-A,-p AF	Protocol family
	-H HWTYPE	Hardware address type

####################
# arping
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: arping [-fqbDUA] [-c CNT] [-w TIMEOUT] [-I IFACE] [-s SRC_IP] DST_IP

Send ARP requests/replies

	-f		Quit on first ARP reply
	-q		Quiet
	-b		Keep broadcasting, don't go unicast
	-D		Exit with 1 if DST_IP replies
	-U		Unsolicited ARP mode, update your neighbors
	-A		ARP answer mode, update your neighbors
	-c N		Stop after sending N ARP requests
	-w TIMEOUT	Seconds to wait for ARP reply
	-I IFACE	Interface to use (default eth0)
	-s SRC_IP	Sender IP address
	DST_IP		Target IP address

####################
# ascii
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

No help available

####################
# ash
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ash [-il] [-|+Cabefmnuvx] [-|+o OPT]... [-c 'SCRIPT' [ARG0 ARGS] | FILE [ARGS] | -s [ARGS]]

Unix shell interpreter

####################
# awk
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: awk [OPTIONS] [AWK_PROGRAM] [FILE]...

	-v VAR=VAL	Set variable
	-F SEP		Use SEP as field separator
	-f FILE		Read program from FILE
	-e AWK_PROGRAM

####################
# base32
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: base32 [-d] [-w COL] [FILE]

Base32 encode or decode FILE to standard output

	-d	Decode data
	-w COL	Wrap lines at COL (default 76, 0 disables)

####################
# base64
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: base64 [-d] [-w COL] [FILE]

Base64 encode or decode FILE to standard output

	-d	Decode data
	-w COL	Wrap lines at COL (default 76, 0 disables)

####################
# basename
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: basename FILE [SUFFIX]

Strip directory path and .SUFFIX from FILE

####################
# bbconfig
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: bbconfig

Print the config file used by busybox build

####################
# beep
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: beep -f FREQ -l LEN -d DELAY -r COUNT -n

	-f	Frequency in Hz
	-l	Length in ms
	-d	Delay in ms
	-r	Repetitions
	-n	Start new tone

####################
# blkdiscard
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: blkdiscard [-o OFS] [-l LEN] [-s] DEVICE

Discard sectors on DEVICE

	-o OFS	Byte offset into device
	-l LEN	Number of bytes to discard
	-s	Perform a secure discard

####################
# blkid
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: blkid [BLOCKDEV]...

Print UUIDs of all filesystems

####################
# blockdev
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: blockdev OPTION BLOCKDEV

	--setro		Set ro
	--setrw		Set rw
	--getro		Get ro
	--getss		Get sector size
	--getbsz	Get block size
	--setbsz BYTES	Set block size
	--getsz		Get device size in 512-byte sectors
	--getsize64	Get device size in bytes
	--getra		Get readahead in 512-byte sectors
	--setra SECTORS	Set readahead
	--flushbufs	Flush buffers
	--rereadpt	Reread partition table

####################
# brctl
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: brctl COMMAND [BRIDGE [ARGS]]

Manage ethernet bridges
Commands:
	show [BRIDGE]...	Show bridges
	addbr BRIDGE		Create BRIDGE
	delbr BRIDGE		Delete BRIDGE
	addif BRIDGE IFACE	Add IFACE to BRIDGE
	delif BRIDGE IFACE	Delete IFACE from BRIDGE
	showmacs BRIDGE			List MAC addresses
	showstp	BRIDGE			Show STP info
	stp BRIDGE 1/yes/on|0/no/off	Set STP on/off
	setageing BRIDGE SECONDS	Set ageing time
	setfd BRIDGE SECONDS		Set bridge forward delay
	sethello BRIDGE SECONDS		Set hello time
	setmaxage BRIDGE SECONDS	Set max message age
	setbridgeprio BRIDGE PRIO	Set bridge priority
	setportprio BRIDGE IFACE PRIO	Set port priority
	setpathcost BRIDGE IFACE COST	Set path cost

####################
# bunzip2
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: bunzip2 [-cfk] [FILE]...

Decompress FILEs (or stdin)

	-c	Write to stdout
	-f	Force
	-k	Keep input files
	-t	Test integrity

####################
# bzcat
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: bzcat [FILE]...

Decompress to stdout

####################
# bzip2
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: bzip2 [-cfkdt123456789] [FILE]...

Compress FILEs (or stdin) with bzip2 algorithm

	-1..9	Compression level
	-d	Decompress
	-c	Write to stdout
	-f	Force
	-k	Keep input files
	-t	Test integrity

####################
# cal
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: cal [-jy] [[MONTH] YEAR]

Display a calendar

	-j	Use julian dates
	-y	Display the entire year

####################
# cat
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: cat [-nbvteA] [FILE]...

Print FILEs to stdout

	-n	Number output lines
	-b	Number nonempty lines
	-v	Show nonprinting characters as ^x or M-x
	-t	...and tabs as ^I
	-e	...and end lines with $
	-A	Same as -vte

####################
# chat
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: chat EXPECT [SEND [EXPECT [SEND]]...]

Useful for interacting with a modem connected to stdin/stdout.
A script consists of "expect-send" argument pairs.
Example:
chat '' ATZ OK ATD123456 CONNECT '' ogin: pppuser word: ppppass '~'

####################
# chattr
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: chattr [-R] [-v VERSION] [-p PROJID] [-+=AacDdijsStTu] FILE...

Change ext2 file attributes

	-R	Recurse
	-v NUM	Set version/generation number
	-p NUM	Set project number
Modifiers:
	-,+,=	Remove/add/set attributes
Attributes:
	A	No atime
	a	Append only
	C	No copy-on-write
	c	Compressed
	D	Synchronous dir updates
	d	Don't backup with dump
	E	Encrypted
	e	File uses extents
	F	Case-insensitive dir
	I	Indexed dir
	i	Immutable
	j	Write data to journal first
	N	File is stored in inode
	P	Hierarchical project ID dir
	S	Synchronous file updates
	s	Zero storage when deleted
	T	Top of dir hierarchy
	t	Don't tail-merge with other files
	u	Allow undelete
	V	Verity

####################
# chcon
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: chcon [-chfRv] CONTEXT FILE...
	chcon [-chfRv] [-u USER] [-r ROLE] [-l RANGE] [-t TYPE] FILE...
	chcon [-chfRv] --reference=RFILE FILE...

Change the security context of FILEs to CONTEXT

	-v	Verbose
	-c	Report changes made
	-h	Affect symlinks instead of their targets
	-f	Suppress most error messages
	--reference RFILE Use RFILE's group instead of using a CONTEXT value
	-u USER	Set user/role/type/range in the target security context
	-r ROLE
	-t TYPE
	-l RANGE
	-R	Recurse

####################
# chgrp
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: chgrp [-RhLHPcvf]... GROUP FILE...

Change the group membership of FILEs to GROUP

	-h	Affect symlinks instead of symlink targets
	-L	Traverse all symlinks to directories
	-H	Traverse symlinks on command line only
	-P	Don't traverse symlinks (default)
	-R	Recurse
	-c	List changed files
	-v	Verbose
	-f	Hide errors

####################
# chmod
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: chmod [-Rcvf] MODE[,MODE]... FILE...

MODE is octal number (bit pattern sstrwxrwxrwx) or [ugoa]{+|-|=}[rwxXst]

	-R	Recurse
	-c	List changed files
	-v	Verbose
	-f	Hide errors

####################
# chown
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: chown [-RhLHPcvf]... USER[:[GRP]] FILE...

Change the owner and/or group of FILEs to USER and/or GRP

	-h	Affect symlinks instead of symlink targets
	-L	Traverse all symlinks to directories
	-H	Traverse symlinks on command line only
	-P	Don't traverse symlinks (default)
	-R	Recurse
	-c	List changed files
	-v	Verbose
	-f	Hide errors

####################
# chroot
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: chroot NEWROOT [PROG ARGS]

Run PROG with root directory set to NEWROOT

####################
# chrt
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: chrt -m | -p [PRIO] PID | [-rfobi] PRIO PROG ARGS

Change scheduling priority and class for a process

	-m	Show min/max priorities
	-p	Operate on PID
	-r	Set SCHED_RR class
	-f	Set SCHED_FIFO class
	-o	Set SCHED_OTHER class
	-b	Set SCHED_BATCH class
	-i	Set SCHED_IDLE class

####################
# chvt
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: chvt N

Change the foreground virtual terminal to /dev/ttyN

####################
# cksum
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: cksum FILE...

Calculate CRC32 checksum of FILEs

####################
# clear
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: clear

Clear screen

####################
# cmp
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: cmp [-ls] FILE1 [FILE2 [SKIP1 [SKIP2]]]

Compare FILE1 with FILE2 (or stdin)

	-l	Write the byte numbers (decimal) and values (octal)
		for all differing bytes
	-s	Quiet

####################
# comm
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: comm [-123] FILE1 FILE2

Compare FILE1 with FILE2

	-1	Suppress lines unique to FILE1
	-2	Suppress lines unique to FILE2
	-3	Suppress lines common to both files

####################
# conspy
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: conspy [-vcsndfFQ] [-x COL] [-y LINE] [CONSOLE_NO]

A text-mode VNC like program for Linux virtual consoles.
To exit, quickly press ESC 3 times.

	-v	Don't send keystrokes to the console
	-c	Create missing /dev/{tty,vcsa}N
	-s	Open a SHELL session
	-n	Black & white
	-d	Dump console to stdout
	-f	Follow cursor
	-F	Assume console is on a framebuffer device
	-Q	Disable exit on ESC-ESC-ESC
	-x COL	Starting column
	-y LINE	Starting line

####################
# cp
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: cp [-arPLHpfinlsTu] SOURCE DEST
or: cp [-arPLHpfinlsu] SOURCE... { -t DIRECTORY | DIRECTORY }

Copy SOURCEs to DEST

	-a	Same as -dpR
	-c	Preserve security context
	-R,-r	Recurse
	-d,-P	Preserve symlinks (default if -R)
	-L	Follow all symlinks
	-H	Follow symlinks on command line
	-p	Preserve file attributes if possible
	-f	Overwrite
	-i	Prompt before overwrite
	-n	Don't overwrite
	-l,-s	Create (sym)links
	-T	Refuse to copy if DEST is a directory
	-t DIR	Copy all SOURCEs into DIR
	-u	Copy only newer files

####################
# cpio
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: cpio [-dmvu] [-F FILE] [-R USER[:GRP]] [-H newc] [-tio] [-p DIR] [EXTR_FILE]...

Extract (-i) or list (-t) files from a cpio archive, or
take file list from stdin and create an archive (-o) or copy files (-p)

Main operation mode:
	-t	List
	-i	Extract EXTR_FILEs (or all)
	-o	Create (requires -H newc)
	-p DIR	Copy files to DIR
Options:
	-H newc	Archive format
	-d	Make leading directories
	-m	Restore mtime
	-v	Verbose
	-u	Overwrite
	-F FILE	Input (-t,-i,-p) or output (-o) file
	-R USER[:GRP]	Set owner of created files
	-L	Dereference symlinks
	-0	Input is separated by NULs

####################
# crc32
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: crc32 FILE...

Calculate CRC32 checksum of FILEs

####################
# crond
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: crond [-fbS] [-l N] [-d N] [-L LOGFILE] [-c DIR]

	-f	Foreground
	-b	Background (default)
	-S	Log to syslog (default)
	-l N	Set log level. Most verbose 0, default 8
	-d N	Set log level, log to stderr
	-L FILE	Log to FILE
	-c DIR	Cron dir. Default:/var/spool/cron/crontabs

####################
# crontab
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: crontab [-c DIR] [-u USER] [-ler]|[FILE]

	-c	Crontab directory
	-u	User
	-l	List crontab
	-e	Edit crontab
	-r	Delete crontab
	FILE	Replace crontab by FILE ('-': stdin)

####################
# cttyhack
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: cttyhack [PROG ARGS]

Give PROG a controlling tty if possible.
Example for /etc/inittab (for busybox init):
	::respawn:/bin/cttyhack /bin/sh
Giving controlling tty to shell running with PID 1:
	$ exec cttyhack sh
Starting interactive shell from boot shell script:
	setsid cttyhack sh

####################
# cut
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: cut [OPTIONS] [FILE]...

Print selected fields from FILEs to stdout

	-b LIST	Output only bytes from LIST
	-c LIST	Output only characters from LIST
	-d SEP	Field delimiter for input (default -f TAB, -F run of whitespace)
	-O SEP	Field delimeter for output (default = -d for -f, one space for -F)
	-D	Don't sort/collate sections or match -fF lines without delimeter
	-f LIST	Print only these fields (-d is single char)
	-F LIST	Print only these fields (-d is regex)
	-s	Output only lines containing delimiter
	-n	Ignored

####################
# date
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: date [OPTIONS] [+FMT] [[-s] TIME]

Display time (using +FMT), or set time

	-u		Work in UTC (don't convert to local time)
	[-s] TIME	Set time to TIME
	-d TIME		Display TIME, not 'now'
	-D FMT		FMT (strptime format) for -s/-d TIME conversion
	-r FILE		Display last modification time of FILE
	-R		Output RFC-2822 date
	-I[SPEC]	Output ISO-8601 date
			SPEC=date (default), hours, minutes, seconds or ns

Recognized TIME formats:
	@seconds_since_1970
	hh:mm[:ss]
	[YYYY.]MM.DD-hh:mm[:ss]
	YYYY-MM-DD hh:mm[:ss]
	[[[[[YY]YY]MM]DD]hh]mm[.ss]
	'date TIME' form accepts MMDDhhmm[[YY]YY][.ss] instead

####################
# dc
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: dc [-eSCRIPT]... [-fFILE]... [FILE]...

Tiny RPN calculator. Operations:
Arithmetic: + - * / % ^
p - print top of the stack without popping
f - print entire stack
o - pop the value and set output radix
Examples: dc -e'2 2 + p' -> 4, dc -e'8 8 * 2 2 + / p' -> 16

####################
# dd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: dd [if=FILE] [of=FILE] [ibs=N obs=N/bs=N] [count=N] [skip=N] [seek=N]
	[conv=notrunc|noerror|sync|fsync]
	[iflag=skip_bytes|count_bytes|fullblock|direct] [oflag=seek_bytes|append|direct]

Copy a file with converting and formatting

	if=FILE		Read from FILE instead of stdin
	of=FILE		Write to FILE instead of stdout
	bs=N		Read and write N bytes at a time
	ibs=N		Read N bytes at a time
	obs=N		Write N bytes at a time
	count=N		Copy only N input blocks
	skip=N		Skip N input blocks
	seek=N		Skip N output blocks
	conv=notrunc	Don't truncate output file
	conv=noerror	Continue after read errors
	conv=sync	Pad blocks with zeros
	conv=fsync	Physically write data out before finishing
	conv=swab	Swap every pair of bytes
	iflag=skip_bytes	skip=N is in bytes
	iflag=count_bytes	count=N is in bytes
	oflag=seek_bytes	seek=N is in bytes
	iflag=direct	O_DIRECT input
	oflag=direct	O_DIRECT output
	iflag=fullblock	Read full blocks
	oflag=append	Open output in append mode
	status=noxfer	Suppress rate output
	status=none	Suppress all output

N may be suffixed by c (1), w (2), b (512), kB (1000), k (1024), MB, M, GB, G

####################
# deallocvt
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: deallocvt [N]

Deallocate unused virtual terminal /dev/ttyN

####################
# depmod
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: depmod [-n] [-b BASE] [VERSION] [MODFILES]...

Generate modules.dep, alias, and symbols files

	-b BASE	Use BASE/lib/modules/VERSION
	-n	Dry run: print files to stdout

####################
# devmem
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: devmem ADDRESS [WIDTH [VALUE]]

Read/write from physical address

	ADDRESS	Address to act upon
	WIDTH	Width (8/16/...)
	VALUE	Data to be written

####################
# df
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: df [-PkmhTai] [-B SIZE] [-t TYPE] [FILESYSTEM]...

Print filesystem usage statistics

	-P	POSIX output format
	-k	1024-byte blocks (default)
	-m	1M-byte blocks
	-h	Human readable (e.g. 1K 243M 2G)
	-T	Print filesystem type
	-t TYPE	Print only mounts of this type
	-a	Show all filesystems
	-i	Inodes
	-B SIZE	Blocksize

####################
# dhcprelay
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: dhcprelay CLIENT_IFACE[,CLIENT_IFACE2]... SERVER_IFACE [SERVER_IP]

Relay DHCP requests between clients and server

####################
# diff
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: diff [-abBdiNqrTstw] [-L LABEL] [-S FILE] [-U LINES] FILE1 FILE2

Compare files line by line and output the differences between them.
This implementation supports unified diffs only.

	-a	Treat all files as text
	-b	Ignore changes in the amount of whitespace
	-B	Ignore changes whose lines are all blank
	-d	Try hard to find a smaller set of changes
	-i	Ignore case differences
	-L	Use LABEL instead of the filename in the unified header
	-N	Treat absent files as empty
	-q	Output only whether files differ
	-r	Recurse
	-S	Start with FILE when comparing directories
	-T	Make tabs line up by prefixing a tab when necessary
	-s	Report when two files are the same
	-t	Expand tabs to spaces in output
	-U	Output LINES lines of context
	-w	Ignore all whitespace

####################
# dirname
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: dirname FILENAME

Strip non-directory suffix from FILENAME

####################
# dmesg
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: dmesg [-cr] [-n LEVEL] [-s SIZE]

Print or control the kernel ring buffer

	-c		Clear ring buffer after printing
	-n LEVEL	Set console logging level
	-s SIZE		Buffer size
	-r		Print raw message buffer

####################
# dnsd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: dnsd [-dvs] [-c CONFFILE] [-t TTL_SEC] [-p PORT] [-i ADDR]

Small static DNS server daemon

	-c FILE	Config file
	-t SEC	TTL
	-p PORT	Listen on PORT
	-i ADDR	Listen on ADDR
	-d	Daemonize
	-v	Verbose
	-s	Send successful replies only. Use this if you want
		to use /etc/resolv.conf with two nameserver lines:
			nameserver DNSD_SERVER
			nameserver NORMAL_DNS_SERVER

####################
# dnsdomainname
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

No help available

####################
# dos2unix
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: dos2unix [-ud] [FILE]

Convert FILE in-place from DOS to Unix format.
When no file is given, use stdin/stdout.

	-u	dos2unix
	-d	unix2dos

####################
# du
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: du [-aHLdclsxhmk] [FILE]...

Summarize disk space used for FILEs (or directories)

	-a	Show file sizes too
	-b	Apparent size (including holes)
	-L	Follow all symlinks
	-H	Follow symlinks on command line
	-d N	Limit output to directories (and files with -a) of depth < N
	-c	Show grand total
	-l	Count sizes many times if hard linked
	-s	Display only a total for each argument
	-x	Skip directories on different filesystems
	-h	Sizes in human readable format (e.g., 1K 243M 2G)
	-m	Sizes in megabytes
	-k	Sizes in kilobytes (default)

####################
# dumpkmap
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: dumpkmap > keymap

Print a binary keyboard translation table to stdout

####################
# dumpleases
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: dumpleases [-r|-a] [-d] [-f LEASEFILE]

Display DHCP leases granted by udhcpd

	-f FILE	Lease file
	-r	Show remaining time
	-a	Show expiration time
	-d	Show time in seconds

####################
# echo
####################
--help

####################
# ed
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ed [FILE]

####################
# egrep
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

No help available

####################
# eject
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: eject [-t] [-T] [DEVICE]

Eject DEVICE or default /dev/cdrom

	-s	SCSI device
	-t	Close tray
	-T	Open/close tray (toggle)

####################
# env
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: env [-i0] [-u NAME]... [-] [NAME=VALUE]... [PROG ARGS]

Print current environment or run PROG after setting up environment

	-, -i	Start with empty environment
	-0	NUL terminated output
	-u NAME	Remove variable from environment

####################
# ether-wake
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ether-wake [-b] [-i IFACE] [-p aa:bb:cc:dd[:ee:ff]/a.b.c.d] MAC

Send a magic packet to wake up sleeping machines.
MAC must be a station address (00:11:22:33:44:55) or
a hostname with a known 'ethers' entry.

	-b		Broadcast the packet
	-i IFACE	Interface to use (default eth0)
	-p PASSWORD	Append four or six byte PASSWORD to the packet

####################
# expand
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: expand [-i] [-t N] [FILE]...

Convert tabs to spaces, writing to stdout

	-i	Don't convert tabs after non blanks
	-t	Tabstops every N chars

####################
# expr
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: expr EXPRESSION

Print the value of EXPRESSION

EXPRESSION may be:
	ARG1 | ARG2	ARG1 if it is neither null nor 0, otherwise ARG2
	ARG1 & ARG2	ARG1 if neither argument is null or 0, otherwise 0
	ARG1 < ARG2	1 if ARG1 is less than ARG2, else 0. Similarly:
	ARG1 <= ARG2
	ARG1 = ARG2
	ARG1 != ARG2
	ARG1 >= ARG2
	ARG1 > ARG2
	ARG1 + ARG2	Sum of ARG1 and ARG2. Similarly:
	ARG1 - ARG2
	ARG1 * ARG2
	ARG1 / ARG2
	ARG1 % ARG2
	STRING : REGEXP		Anchored pattern match of REGEXP in STRING
	match STRING REGEXP	Same as STRING : REGEXP
	substr STRING POS LEN	Substring of STRING, POS counts from 1
	index STRING CHARS	Index in STRING where any CHARS is found, or 0
	length STRING		Length of STRING
	quote TOKEN		Interpret TOKEN as a string, even if
				it is a keyword like 'match' or an
				operator like '/'
	(EXPRESSION)		Value of EXPRESSION

Beware that many operators need to be escaped or quoted for shells.
Comparisons are arithmetic if both ARGs are numbers, else
lexicographical. Pattern matches return the string matched between
\( and \) or null; if \( and \) are not used, they return the number
of characters matched or 0.

####################
# factor
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: factor [NUMBER]...

Print prime factors

####################
# fakeidentd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: fakeidentd [-fiw] [-b ADDR] [STRING]

Provide fake ident (auth) service

	-f	Run in foreground
	-i	Inetd mode
	-w	Inetd 'wait' mode
	-b ADDR	Bind to specified address
	STRING	Ident answer string (default: nobody)

####################
# false
####################

####################
# fatattr
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: fatattr [-+rhsvda] FILE...

Change file attributes on FAT filesystem

	-	Clear attributes
	+	Set attributes
	r	Read only
	h	Hidden
	s	System
	v	Volume label
	d	Directory
	a	Archive

####################
# fbset
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: fbset [OPTIONS] [MODE]

Show and modify frame buffer settings

####################
# fbsplash
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: fbsplash -s IMGFILE [-c] [-d DEV] [-i INIFILE] [-f CMD]

	-s	Image
	-c	Hide cursor
	-d	Framebuffer device (default /dev/fb0)
	-i	Config file (var=value):
			BAR_LEFT,BAR_TOP,BAR_WIDTH,BAR_HEIGHT
			BAR_R,BAR_G,BAR_B,IMG_LEFT,IMG_TOP
	-f	Control pipe (else exit after drawing image)
			commands: 'NN' (% for progress bar) or 'exit'

####################
# fdflush
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: fdflush DEVICE

Force floppy disk drive to detect disk change

####################
# fdformat
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: fdformat [-n] DEVICE

Format floppy disk

	-n	Don't verify after format

####################
# fdisk
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: fdisk [-ul] [-C CYLINDERS] [-H HEADS] [-S SECTORS] [-b SSZ] DISK

Change partition table

	-u		Start and End are in sectors (instead of cylinders)
	-l		Show partition table for each DISK, then exit
	-b 2048		(for certain MO disks) use 2048-byte sectors
	-C CYLINDERS	Set number of cylinders/heads/sectors
	-H HEADS	Typically 255
	-S SECTORS	Typically 63

####################
# fgconsole
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: fgconsole

Get active console

####################
# fgrep
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

No help available

####################
# find
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: find [-HL] [PATH]... [OPTIONS] [ACTIONS]

Search for files and perform actions on them.
First failed action stops processing of current file.
Defaults: PATH is current directory, action is '-print'

	-L,-follow	Follow symlinks
	-H		...on command line only
	-xdev		Don't descend directories on other filesystems
	-maxdepth N	Descend at most N levels. -maxdepth 0 applies
			actions to command line arguments only
	-mindepth N	Don't act on first N levels
	-depth		Act on directory *after* traversing it

Actions:
	( ACTIONS )	Group actions for -o / -a
	! ACT		Invert ACT's success/failure
	ACT1 [-a] ACT2	If ACT1 fails, stop, else do ACT2
	ACT1 -o ACT2	If ACT1 succeeds, stop, else do ACT2
			Note: -a has higher priority than -o
	-name PATTERN	Match file name (w/o directory name) to PATTERN
	-iname PATTERN	Case insensitive -name
	-path PATTERN	Match path to PATTERN
	-ipath PATTERN	Case insensitive -path
	-regex PATTERN	Match path to regex PATTERN
	-type X		File type is X (one of: f,d,l,b,c,s,p)
	-executable	File is executable
	-perm MASK	At least one mask bit (+MASK), all bits (-MASK),
			or exactly MASK bits are set in file's mode
	-mtime DAYS	mtime is greater than (+N), less than (-N),
			or exactly N days in the past
	-mmin MINS	mtime is greater than (+N), less than (-N),
			or exactly N minutes in the past
	-newer FILE	mtime is more recent than FILE's
	-inum N		File has inode number N
	-user NAME/ID	File is owned by given user
	-group NAME/ID	File is owned by given group
	-size N[bck]	File size is N (c:bytes,k:kbytes,b:512 bytes(def.))
			+/-N: file size is bigger/smaller than N
	-links N	Number of links is greater than (+N), less than (-N),
			or exactly N
	-empty		Match empty file/directory
	-prune		If current file is directory, don't descend into it
If none of the following actions is specified, -print is assumed
	-print		Print file name
	-print0		Print file name, NUL terminated
	-exec CMD ARG ;	Run CMD with all instances of {} replaced by
			file name. Fails if CMD exits with nonzero
	-exec CMD ARG + Run CMD with {} replaced by list of file names
	-delete		Delete current file/directory. Turns on -depth option
	-quit		Exit

####################
# findfs
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: findfs LABEL=label or UUID=uuid

Find a filesystem device based on a label or UUID

####################
# flash_eraseall
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: flash_eraseall [-jNq] MTD_DEVICE

Erase an MTD device

	-j	Format the device for jffs2
	-N	Don't skip bad blocks
	-q	Don't display progress messages

####################
# flash_lock
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: flash_lock MTD_DEVICE OFFSET SECTORS

Lock part or all of an MTD device. If SECTORS is -1, then all sectors
will be locked, regardless of the value of OFFSET

####################
# flash_unlock
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: flash_unlock MTD_DEVICE

Unlock an MTD device

####################
# flock
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: flock [-sxun] FD | { FILE [-c] PROG ARGS }

[Un]lock file descriptor, or lock FILE, run PROG

	-s	Shared lock
	-x	Exclusive lock (default)
	-u	Unlock FD
	-n	Fail rather than wait

####################
# fold
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: fold [-bs] [-w WIDTH] [FILE]...

Wrap input lines in FILEs (or stdin), writing to stdout

	-b	Count bytes rather than columns
	-s	Break at spaces
	-w	Use WIDTH columns instead of 80

####################
# free
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: free [-bkmgh]

Display free and used memory

####################
# freeramdisk
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: freeramdisk DEVICE

Free all memory used by the specified ramdisk

####################
# fsck
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: fsck [-ANPRTV] [-t FSTYPE] [FS_OPTS] [BLOCKDEV]...

Check and repair filesystems

	-A	Walk /etc/fstab and check all filesystems
	-N	Don't execute, just show what would be done
	-P	With -A, check filesystems in parallel
	-R	With -A, skip the root filesystem
	-T	Don't show title on startup
	-V	Verbose
	-t TYPE	List of filesystem types to check

####################
# fsck.minix
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: fsck.minix [-larvsmf] BLOCKDEV

Check MINIX filesystem

	-l	List all filenames
	-r	Perform interactive repairs
	-a	Perform automatic repairs
	-v	Verbose
	-s	Output superblock information
	-m	Show "mode not cleared" warnings
	-f	Force file system check

####################
# fsfreeze
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: fsfreeze --[un]freeze MOUNTPOINT

Flush and halt writes to MOUNTPOINT

####################
# fstrim
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: fstrim [OPTIONS] MOUNTPOINT

	-o OFFSET	Offset in bytes to discard from
	-l LEN		Bytes to discard
	-m MIN		Minimum extent length
	-v		Print number of discarded bytes

####################
# fsync
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: fsync [-d] FILE...

Write all buffered blocks in FILEs to disk

	-d	Avoid syncing metadata

####################
# ftpd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ftpd [-wvS] [-a USER] [-t SEC] [-T SEC] [DIR]

FTP server. Chroots to DIR, if this fails (run by non-root), cds to it.
It is an inetd service, inetd.conf line:
	21 stream tcp nowait root ftpd ftpd /files/to/serve
Can be run from tcpsvd:
	tcpsvd -vE 0.0.0.0 21 ftpd /files/to/serve

	-w	Allow upload
	-A	No login required, client access occurs under ftpd's UID
	-a USER	Enable 'anonymous' login and map it to USER
	-v	Log errors to stderr. -vv: verbose log
	-S	Log errors to syslog. -SS: verbose log
	-t,-T N	Idle and absolute timeout

####################
# ftpget
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ftpget [OPTIONS] HOST [LOCAL_FILE] REMOTE_FILE

Download a file via FTP

	-c	Continue previous transfer
	-v	Verbose
	-u USER	Username
	-p PASS	Password
	-P PORT

####################
# ftpput
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ftpput [OPTIONS] HOST [REMOTE_FILE] LOCAL_FILE

Upload a file to a FTP server

	-v	Verbose
	-u USER	Username
	-p PASS	Password
	-P PORT

####################
# fuser
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: fuser [-msk46] [-SIGNAL] FILE or PORT/PROTO

Find processes which use FILEs or PORTs

	-m	Find processes which use same fs as FILEs
	-4,-6	Search only IPv4/IPv6 space
	-s	Don't display PIDs
	-k	Kill found processes
	-SIGNAL	Signal to send (default: KILL)

####################
# getenforce
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

No help available

####################
# getopt
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: getopt [OPTIONS] [--] OPTSTRING PARAMS

	-a		Allow long options starting with single -
	-l LOPT[,...]	Long options to recognize
	-n PROGNAME	The name under which errors are reported
	-o OPTSTRING	Short options to recognize
	-q		No error messages on unrecognized options
	-Q		No normal output
	-s SHELL	Set shell quoting conventions
	-T		Version test (exits with 4)
	-u		Don't quote output

Example:

O=`getopt -l bb: -- ab:c:: "$@"` || exit 1
eval set -- "$O"
while true; do
	case "$1" in
	-a)	echo A; shift;;
	-b|--bb) echo "B:'$2'"; shift 2;;
	-c)	case "$2" in
		"")	echo C; shift 2;;
		*)	echo "C:'$2'"; shift 2;;
		esac;;
	--)	shift; break;;
	*)	echo Error; exit 1;;
	esac
done

####################
# grep
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: grep [-HhnlLoqvsrRiwFE] [-m N] [-A|B|C N] { PATTERN | -e PATTERN... | -f FILE... } [FILE]...

Search for PATTERN in FILEs (or stdin)

	-H	Add 'filename:' prefix
	-h	Do not add 'filename:' prefix
	-n	Add 'line_no:' prefix
	-l	Show only names of files that match
	-L	Show only names of files that don't match
	-c	Show only count of matching lines
	-o	Show only the matching part of line
	-q	Quiet. Return 0 if PATTERN is found, 1 otherwise
	-v	Select non-matching lines
	-s	Suppress open and read errors
	-r	Recurse
	-R	Recurse and dereference symlinks
	-i	Ignore case
	-w	Match whole words only
	-x	Match whole lines only
	-F	PATTERN is a literal (not regexp)
	-E	PATTERN is an extended regexp
	-m N	Match up to N times per file
	-A N	Print N lines of trailing context
	-B N	Print N lines of leading context
	-C N	Same as '-A N -B N'
	-e PTRN	Pattern to match
	-f FILE	Read pattern from file

####################
# groups
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: groups [USER]

Print the groups USER is in

####################
# gunzip
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: gunzip [-cfkt] [FILE]...

Decompress FILEs (or stdin)

	-c	Write to stdout
	-f	Force
	-k	Keep input files
	-t	Test integrity

####################
# gzip
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: gzip [-cfkdt123456789] [FILE]...

Compress FILEs (or stdin)

	-1..9	Compression level
	-d	Decompress
	-c	Write to stdout
	-f	Force
	-k	Keep input files
	-t	Test integrity

####################
# hd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: hd FILE...

hd is an alias for hexdump -C

####################
# hdparm
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: hdparm [OPTIONS] [DEVICE]

	-a	Get/set fs readahead
	-A	Set drive read-lookahead flag (0/1)
	-b	Get/set bus state (0 == off, 1 == on, 2 == tristate)
	-B	Set Advanced Power Management setting (1-255)
	-c	Get/set IDE 32-bit IO setting
	-C	Check IDE power mode status
	-d	Get/set using_dma flag
	-D	Enable/disable drive defect-mgmt
	-f	Flush buffer cache for device on exit
	-g	Display drive geometry
	-h	Display terse usage information
	-i	Display drive identification
	-I	Detailed/current information directly from drive
	-k	Get/set keep_settings_over_reset flag (0/1)
	-K	Set drive keep_features_over_reset flag (0/1)
	-L	Set drive doorlock (0/1) (removable harddisks only)
	-m	Get/set multiple sector count
	-n	Get/set ignore-write-errors flag (0/1)
	-p	Set PIO mode on IDE interface chipset (0,1,2,3,4,...)
	-P	Set drive prefetch count
	-Q	Get/set DMA tagged-queuing depth (if supported)
	-r	Get/set readonly flag (DANGEROUS to set)
	-R	Register an IDE interface (DANGEROUS)
	-S	Set standby (spindown) timeout
	-t	Perform device read timings
	-T	Perform cache read timings
	-u	Get/set unmaskirq flag (0/1)
	-U	Unregister an IDE interface (DANGEROUS)
	-v	Defaults; same as -mcudkrag for IDE drives
	-V	Display program version and exit immediately
	-w	Perform device reset (DANGEROUS)
	-W	Set drive write-caching flag (0/1) (DANGEROUS)
	-x	Tristate device for hotswap (0/1) (DANGEROUS)
	-X	Set IDE xfer mode (DANGEROUS)
	-y	Put IDE drive in standby mode
	-Y	Put IDE drive to sleep
	-Z	Disable Seagate auto-powersaving mode
	-z	Reread partition table

####################
# head
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: head [OPTIONS] [FILE]...

Print first 10 lines of FILEs (or stdin).
With more than one FILE, precede each with a filename header.

	-n N[bkm]	Print first N lines
	-n -N[bkm]	Print all except N last lines
	-c [-]N[bkm]	Print first N bytes
			(b:*512 k:*1024 m:*1024^2)
	-q		Never print headers
	-v		Always print headers

####################
# hexdump
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: hexdump [-bcdoxCv] [-e FMT] [-f FMT_FILE] [-n LEN] [-s OFS] [FILE]...

Display FILEs (or stdin) in a user specified format

	-b		1-byte octal display
	-c		1-byte character display
	-d		2-byte decimal display
	-o		2-byte octal display
	-x		2-byte hex display
	-C		hex+ASCII 16 bytes per line
	-v		Show all (no dup folding)
	-e FORMAT_STR	Example: '16/1 "%02x|""\n"'
	-f FORMAT_FILE
	-n LENGTH	Show only first LENGTH bytes
	-s OFFSET	Skip OFFSET bytes

####################
# hexedit
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: hexedit FILE

Edit FILE in hexadecimal

####################
# hostname
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: hostname [-sidf] [HOSTNAME | -F FILE]

Show or set hostname or DNS domain name

	-s	Short
	-i	Addresses for the hostname
	-d	DNS domain name
	-f	Fully qualified domain name
	-F FILE	Use FILE's content as hostname

####################
# httpd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: httpd [-ifv[v]] [-c CONFFILE] [-p [IP:]PORT] [-u USER[:GRP]] [-r REALM] [-h HOME]
or httpd -d/-e STRING

Listen for incoming HTTP requests

	-i		Inetd mode
	-f		Don't daemonize
	-v[v]		Verbose
	-p [IP:]PORT	Bind to IP:PORT (default *:80)
	-u USER[:GRP]	Set uid/gid after binding to port
	-r REALM	Authentication Realm for Basic Authentication
	-h HOME		Home directory (default .)
	-c FILE		Configuration file (default {/etc,HOME}/httpd.conf)
	-e STRING	HTML encode STRING
	-d STRING	URL decode STRING

####################
# hush
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: hush [-enxl] [-c 'SCRIPT' [ARG0 ARGS] | FILE [ARGS] | -s [ARGS]]

Unix shell interpreter

####################
# hwclock
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: hwclock [-swul] [--systz] [-f DEV]

Show or set hardware clock (RTC)

	-s	Set system time from RTC
	-w	Set RTC from system time
	--systz	Set in-kernel timezone, correct system time
		if RTC is kept in local time
	-f DEV	Use specified device (e.g. /dev/rtc2)
	-u	Assume RTC is kept in UTC
	-l	Assume RTC is kept in local time
		(if neither is given, read from /etc/adjtime)

####################
# id
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: id [-ugGnrZ] [USER]

Print information about USER or the current user

	-Z	Security context
	-u	User ID
	-g	Group ID
	-G	Supplementary group IDs
	-n	Print names instead of numbers
	-r	Print real ID instead of effective ID

####################
# ifconfig
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ifconfig [-a] [IFACE] [ADDRESS]

Configure a network interface

	[add ADDRESS[/PREFIXLEN]]
	[del ADDRESS[/PREFIXLEN]]
	[[-]broadcast [ADDRESS]] [[-]pointopoint [ADDRESS]]
	[netmask ADDRESS] [dstaddr ADDRESS]
	[outfill NN] [keepalive NN]
	[hw ether ADDRESS] [metric NN] [mtu NN]
	[[-]trailers] [[-]arp] [[-]allmulti]
	[multicast] [[-]promisc] [txqueuelen NN] [[-]dynamic]
	[mem_start NN] [io_addr NN] [irq NN]
	[up|down] ...

####################
# ifdown
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ifdown [-nmvf] [-i FILE] -a | IFACE...

	-a	Deconfigure all interfaces
	-i FILE	Use FILE instead of /etc/network/interfaces
	-n	Dry run
		(note: doesn't disable mappings)
	-m	Don't run any mappings
	-v	Print out what would happen before doing it
	-f	Force

####################
# ifenslave
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ifenslave [-cdf] MASTER_IFACE SLAVE_IFACE...

Configure network interfaces for parallel routing

	-c	Change active slave
	-d	Remove slave interface from bonding device
	-f	Force, even if interface is not Ethernet

####################
# ifplugd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ifplugd [OPTIONS]

Network interface plug detection daemon

	-n		Don't daemonize
	-s		Don't log to syslog
	-i IFACE	Interface
	-f/-F		Treat link detection error as link down/link up
			(otherwise exit on error)
	-a		Don't up interface at each link probe
	-M		Monitor creation/destruction of interface
			(otherwise it must exist)
	-r PROG		Script to run
	-x ARG		Extra argument for script
	-I		Don't exit on nonzero exit code from script
	-p		Don't run "up" script on startup
	-q		Don't run "down" script on exit
	-l		Always run script on startup
	-t SECS		Poll time in seconds
	-u SECS		Delay before running script after link up
	-d SECS		Delay after link down
	-m MODE		API mode (mii, priv, ethtool, wlan, iff, auto)
	-k		Kill running daemon

####################
# ifup
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ifup [-nmvf] [-i FILE] -a | IFACE...

	-a	Configure all interfaces
	-i FILE	Use FILE instead of /etc/network/interfaces
	-n	Dry run
		(note: doesn't disable mappings)
	-m	Don't run any mappings
	-v	Print out what would happen before doing it
	-f	Force

####################
# inetd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: inetd [-fe] [-q N] [-R N] [CONFFILE]

Listen for network connections and launch programs

	-f	Run in foreground
	-e	Log to stderr
	-q N	Socket listen queue (default 128)
	-R N	Pause services after N connects/min
		(default 0 - disabled)
	Default CONFFILE is /etc/inetd.conf

####################
# inotifyd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: inotifyd PROG FILE1[:MASK]...

Run PROG on filesystem changes.
When a filesystem event matching MASK occurs on FILEn,
PROG ACTUAL_EVENTS FILEn [SUBFILE] is run.
If PROG is -, events are sent to stdout.
Events:
	a	File is accessed
	c	File is modified
	e	Metadata changed
	w	Writable file is closed
	0	Unwritable file is closed
	r	File is opened
	D	File is deleted
	M	File is moved
	u	Backing fs is unmounted
	o	Event queue overflowed
	x	File can't be watched anymore
If watching a directory:
	y	Subfile is moved into dir
	m	Subfile is moved out of dir
	n	Subfile is created
	d	Subfile is deleted

inotifyd waits for PROG to exit.
When x event happens for all FILEs, inotifyd exits.

####################
# insmod
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: insmod FILE [SYMBOL=VALUE]...

Load kernel module

####################
# install
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: install [-cdDsp] [-o USER] [-g GRP] [-m MODE] [-t DIR] [SOURCE]... DEST

Copy files and set attributes

	-c	Just copy (default)
	-d	Create directories
	-D	Create leading target directories
	-s	Strip symbol table
	-p	Preserve date
	-o USER	Set ownership
	-g GRP	Set group ownership
	-m MODE	Set permissions
	-t DIR	Install to DIR

####################
# ionice
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ionice [-c 1-3] [-n 0-7] [-t] { -p PID | PROG ARGS }

Change I/O priority and class

	-c N	Class. 1:realtime 2:best-effort 3:idle
	-n N	Priority
	-t	Ignore errors

####################
# iostat
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: iostat [-c] [-d] [-t] [-z] [-k|-m] [ALL|BLOCKDEV...] [INTERVAL [COUNT]]

Report CPU and I/O statistics

	-c	Show CPU utilization
	-d	Show device utilization
	-t	Print current time
	-z	Omit devices with no activity
	-k	Use kb/s
	-m	Use Mb/s

####################
# ip
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ip [OPTIONS] address|route|link|tunnel|neigh|rule [ARGS]

OPTIONS := -f[amily] inet|inet6|link | -o[neline]

ip addr add|del IFADDR dev IFACE | show|flush [dev IFACE] [to PREFIX]
ip route list|flush|add|del|change|append|replace|test ROUTE
ip link set IFACE [up|down] [arp on|off] [multicast on|off]
	[promisc on|off] [mtu NUM] [name NAME] [qlen NUM] [address MAC]
	[master IFACE | nomaster]
ip tunnel add|change|del|show [NAME]
	[mode ipip|gre|sit] [remote ADDR] [local ADDR] [ttl TTL]
ip neigh show|flush [to PREFIX] [dev DEV] [nud STATE]
ip rule [list] | add|del SELECTOR ACTION

####################
# ipaddr
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ipaddr add|del IFADDR dev IFACE | show|flush [dev IFACE] [to PREFIX]

ipaddr add|change|replace|delete dev IFACE [CONFFLAG-LIST] IFADDR
	IFADDR := PREFIX | ADDR peer PREFIX [broadcast ADDR|+|-]
		[anycast ADDR] [label STRING] [scope SCOPE]
	PREFIX := ADDR[/MASK]
	SCOPE := [host|link|global|NUMBER]
	CONFFLAG-LIST := [CONFFLAG-LIST] CONFFLAG
	CONFFLAG := [noprefixroute]
ipaddr show|flush [dev IFACE] [scope SCOPE] [to PREFIX] [label PATTERN]

####################
# ipcalc
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ipcalc [-bnmphs] ADDRESS[/PREFIX] [NETMASK]

Calculate and display network settings from IP address

	-b	Broadcast address
	-n	Network address
	-m	Default netmask for IP
	-p	Prefix for IP/NETMASK
	-h	Resolved host name
	-s	No error messages

####################
# ipcrm
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ipcrm [-MQS key] [-mqs id]

Upper-case options MQS remove an object by shmkey value.
Lower-case options remove an object by shmid value.

	-mM	Remove memory segment after last detach
	-qQ	Remove message queue
	-sS	Remove semaphore

####################
# ipcs
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ipcs [[-smq] -i SHMID] | [[-asmq] [-tcplu]]

	-i ID	Show specific resource
Resource specification:
	-m	Shared memory segments
	-q	Message queues
	-s	Semaphore arrays
	-a	All (default)
Output format:
	-t	Time
	-c	Creator
	-p	Pid
	-l	Limits
	-u	Summary

####################
# iplink
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: iplink set IFACE [up|down] [arp on|off] [multicast on|off]
	[promisc on|off] [mtu NUM] [name NAME] [qlen NUM] [address MAC]
	[master IFACE | nomaster]
iplink add [link IFACE] IFACE [address MAC] type TYPE [ARGS]
iplink delete IFACE type TYPE [ARGS]
	TYPE ARGS := vlan VLANARGS | vrf table NUM
	VLANARGS := id VLANID [protocol 802.1q|802.1ad] [reorder_hdr on|off]
		[gvrp on|off] [mvrp on|off] [loose_binding on|off]
iplink show [IFACE]

####################
# ipneigh
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ipneigh show|flush [to PREFIX] [dev DEV] [nud STATE]

####################
# iproute
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: iproute list|flush|add|del|change|append|replace|test ROUTE

iproute list|flush SELECTOR
	SELECTOR := [root PREFIX] [match PREFIX] [proto RTPROTO]
	PREFIX := default|ADDR[/MASK]
iproute get ADDR [from ADDR iif IFACE]
	[oif IFACE] [tos TOS]
iproute add|del|change|append|replace|test ROUTE
	ROUTE := NODE_SPEC [INFO_SPEC]
	NODE_SPEC := PREFIX [table TABLE_ID] [proto RTPROTO] [scope SCOPE] [metric METRIC]
	INFO_SPEC := NH OPTIONS
	NH := [via [inet|inet6] ADDR] [dev IFACE] [src ADDR] [onlink]
	OPTIONS := [mtu [lock] NUM] [advmss [lock] NUM]

####################
# iprule
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: iprule [list] | add|del SELECTOR ACTION

	SELECTOR := [from PREFIX] [to PREFIX] [tos TOS] [fwmark FWMARK[/MASK]]
			[dev IFACE] [pref NUMBER]
	ACTION := [table TABLE_ID] [nat ADDR]
			[prohibit|reject|unreachable]
			[realms [SRCREALM/]DSTREALM]
	TABLE_ID := [local|main|default|NUMBER]

####################
# iptunnel
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: iptunnel add|change|del|show [NAME]
	[mode ipip|gre|sit] [remote ADDR] [local ADDR] [ttl TTL]

iptunnel add|change|del|show [NAME]
	[mode ipip|gre|sit] [remote ADDR] [local ADDR]
	[[i|o]seq] [[i|o]key KEY] [[i|o]csum]
	[ttl TTL] [tos TOS] [[no]pmtudisc] [dev PHYS_DEV]

####################
# kbd_mode
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: kbd_mode [-a|k|s|u] [-C TTY]

Report or set VT console keyboard mode

	-a	Default (ASCII)
	-k	Medium-raw (keycode)
	-s	Raw (scancode)
	-u	Unicode (utf-8)
	-C TTY	Affect TTY

####################
# kill
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: kill [-l] [-SIG] PID...

Send a signal (default: TERM) to given PIDs

	-l	List all signal names and numbers

####################
# killall
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: killall [-lq] [-SIG] PROCESS_NAME...

Send a signal (default: TERM) to given processes

	-l	List all signal names and numbers
	-q	Don't complain if no processes were killed

####################
# killall5
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: killall5 [-l] [-SIG] [-o PID]...

Send a signal (default: TERM) to all processes outside current session

	-l	List all signal names and numbers
	-o PID	Don't signal this PID

####################
# klogd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: klogd [-c N] [-n]

Log kernel messages to syslog

	-c N	Print to console messages more urgent than prio N (1-8)
	-n	Run in foreground

####################
# less
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: less [-EFIMmNSRh~] [FILE]...

View FILE (or stdin) one screenful at a time

	-E	Quit once the end of a file is reached
	-F	Quit if entire file fits on first screen
	-I	Ignore case in all searches
	-M,-m	Display status line with line numbers
		and percentage through the file
	-N	Prefix line number to each line
	-S	Truncate long lines
	-R	Remove color escape codes in input
	-~	Suppress ~s displayed past EOF

####################
# link
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: link FILE LINK

Create hard LINK to FILE

####################
# ln
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ln [-sfnbtv] [-S SUF] TARGET... LINK|DIR

Create a link LINK or DIR/TARGET to the specified TARGET(s)

	-s	Make symlinks instead of hardlinks
	-f	Remove existing destinations
	-n	Don't dereference symlinks - treat like normal file
	-b	Make a backup of the target (if exists) before link operation
	-S SUF	Use suffix instead of ~ when making backup files
	-T	Treat LINK as a file, not DIR
	-v	Verbose

####################
# loadfont
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: loadfont < font

Load a console font from stdin

####################
# loadkmap
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: loadkmap < keymap

Load a binary keyboard translation table from stdin

####################
# logread
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: logread [-fF]

Show messages in syslogd's circular buffer

	-f	Output data as log grows
	-F	Same as -f, but dump buffer first

####################
# losetup
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: losetup [-rP] [-o OFS] {-f|LOOPDEV} FILE: associate loop devices
	losetup -c LOOPDEV: reread file size
	losetup -d LOOPDEV: disassociate
	losetup -a: show status
	losetup -f: show next free loop device

	-o OFS	Start OFS bytes into FILE
	-P	Scan for partitions
	-r	Read-only
	-f	Show/use next free loop device

####################
# ls
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ls [-1AaCxdLHRFplinshrSXvctukZ] [-w WIDTH] [FILE]...

List directory contents

	-1	One column output
	-a	Include names starting with .
	-A	Like -a, but exclude . and ..
	-x	List by lines
	-d	List directory names, not contents
	-L	Follow symlinks
	-H	Follow symlinks on command line
	-R	Recurse
	-p	Append / to directory names
	-F	Append indicator (one of */=@|) to names
	-l	Long format
	-i	List inode numbers
	-n	List numeric UIDs and GIDs instead of names
	-s	List allocated blocks
	-lc	List ctime
	-lu	List atime
	--full-time	List full date/time
	-h	Human readable sizes (1K 243M 2G)
	--group-directories-first
	-S	Sort by size
	-X	Sort by extension
	-v	Sort by version
	-t	Sort by mtime
	-tc	Sort by ctime
	-tu	Sort by atime
	-r	Reverse sort order
	-Z	List security context and permission
	-w N	Format N columns wide
	--color[={always,never,auto}]

####################
# lsattr
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: lsattr [-Radlpv] [FILE]...

List ext2 file attributes

	-R	Recurse
	-a	Include names starting with .
	-d	List directory names, not contents
	-l	List long flag names
	-p	List project ID
	-v	List version/generation number

####################
# lsmod
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: lsmod

List loaded kernel modules

####################
# lsof
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: lsof

Show all open files

####################
# lspci
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: lspci [-mk]

List all PCI devices

	-m	Parsable output
	-k	Show driver

####################
# lsscsi
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

No help available

####################
# lsusb
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

No help available

####################
# lzcat
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: lzcat [FILE]...

Decompress to stdout

####################
# lzma
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: lzma -d [-cfk] [FILE]...

Decompress FILEs (or stdin)

	-d	Decompress
	-c	Write to stdout
	-f	Force
	-k	Keep input files
	-t	Test integrity

####################
# lzop
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: lzop [-cfUvd123456789CF] [FILE]...

	-1..9	Compression level
	-d	Decompress
	-c	Write to stdout
	-f	Force
	-U	Delete input files
	-v	Verbose
	-F	Don't store or verify checksum
	-C	Also write checksum of compressed block

####################
# lzopcat
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: lzopcat [-vF] [FILE]...

	-v	Verbose
	-F	Don't verify checksum

####################
# makedevs
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: makedevs [-d device_table] rootdir

Create a range of special files as specified in a device table.
Device table entries take the form of:
<name> <type> <mode> <uid> <gid> <major> <minor> <start> <inc> <count>
Where name is the file name, type can be one of:
	f	Regular file
	d	Directory
	c	Character device
	b	Block device
	p	Fifo (named pipe)
uid is the user id for the target file, gid is the group id for the
target file. The rest of the entries (major, minor, etc) apply to
to device special files. A '-' may be used for blank entries.

####################
# makemime
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: makemime [OPTIONS] [FILE]...

Create multipart MIME-encoded message from FILEs

	-o FILE	Output. Default: stdout
	-a HDR	Add header(s). Examples:
		"From: user@host.org", "Date: `date -R`"
	-c CT	Content type. Default: application/octet-stream
	-C CS	Charset. Default: us-ascii

Other options are silently ignored

####################
# man
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: man [-aw] [SECTION] MANPAGE[.SECTION]...

Display manual page

	-a	Display all pages
	-w	Show page locations

$COLUMNS overrides output width

####################
# md5sum
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: md5sum [-c[sw]] [FILE]...

Print or check MD5 checksums

	-c	Check sums against list in FILEs
	-s	Don't output anything, status code shows success
	-w	Warn about improperly formatted checksum lines

####################
# mesg
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mesg [y|n]

Control write access to your terminal
	y	Allow write access to your terminal
	n	Disallow write access to your terminal

####################
# microcom
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: microcom [-d DELAY_MS] [-t TIMEOUT_MS ] [-s SPEED] [-X] TTY

Copy bytes from stdin to TTY and from TTY to stdout

	-d DELAY	Wait up to DELAY ms for TTY output before sending
			every next byte to it
	-t TIMEOUT	Exit if both stdin and TTY are silent for TIMEOUT ms
	-s SPEED	Set serial line to SPEED
	-X		Disable special meaning of NUL and Ctrl-X from stdin

####################
# mim
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mim [-f FILE] [SHELL_OPTIONS] [TARGET] ...

Run a script from a Makefile-like specification file

	-f FILE		Spec file (default Mimfile)

####################
# mkdir
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mkdir [-m MODE] [-p] DIRECTORY...

Create DIRECTORY

	-m MODE	Mode
	-p	No error if exists; make parent directories as needed
	-Z	Set security context

####################
# mkdosfs
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mkdosfs [-v] [-n LABEL] BLOCKDEV [KBYTES]

Make a FAT32 filesystem

	-v	Verbose
	-n LBL	Volume label

####################
# mke2fs
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mke2fs [-Fn] [-b BLK_SIZE] [-i INODE_RATIO] [-I INODE_SIZE] [-m RESERVED_PERCENT] [-L LABEL] BLOCKDEV [KBYTES]

	-b BLK_SIZE	Block size, bytes
	-F		Force
	-i RATIO	Max number of files is filesystem_size / RATIO
	-I BYTES	Inode size (min 128)
	-L LBL		Volume label
	-m PERCENT	Percent of blocks to reserve for admin
	-n		Dry run

####################
# mkfifo
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mkfifo [-m MODE] [-Z] NAME

Create named pipe

	-m MODE	Mode (default a=rw)
	-Z	Set security context

####################
# mkfs.ext2
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mkfs.ext2 [-Fn] [-b BLK_SIZE] [-i INODE_RATIO] [-I INODE_SIZE] [-m RESERVED_PERCENT] [-L LABEL] BLOCKDEV [KBYTES]

	-b BLK_SIZE	Block size, bytes
	-F		Force
	-i RATIO	Max number of files is filesystem_size / RATIO
	-I BYTES	Inode size (min 128)
	-L LBL		Volume label
	-m PERCENT	Percent of blocks to reserve for admin
	-n		Dry run

####################
# mkfs.minix
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mkfs.minix [-c | -l FILE] [-nXX] [-iXX] BLOCKDEV [KBYTES]

Make a MINIX filesystem

	-c		Check device for bad blocks
	-n [14|30]	Maximum length of filenames
	-i INODES	Number of inodes for the filesystem
	-l FILE		Read bad blocks list from FILE
	-v		Make version 2 filesystem

####################
# mkfs.reiser
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mkfs.reiser [-f] [-l LABEL] BLOCKDEV [4K-BLOCKS]

Make a ReiserFS V3 filesystem

	-f	Force
	-l LBL	Volume label

####################
# mkfs.vfat
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mkfs.vfat [-v] [-n LABEL] BLOCKDEV [KBYTES]

Make a FAT32 filesystem

	-v	Verbose
	-n LBL	Volume label

####################
# mknod
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mknod [-m MODE] [-Z] NAME TYPE [MAJOR MINOR]

Create a special file (block, character, or pipe)

	-m MODE	Creation mode (default a=rw)
	-Z	Set security context
TYPE:
	b	Block device
	c or u	Character device
	p	Named pipe (MAJOR MINOR must be omitted)

####################
# mkswap
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mkswap [-L LBL] BLOCKDEV [KBYTES]

Prepare BLOCKDEV to be used as swap partition

	-L LBL	Label

####################
# mktemp
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mktemp [-dt] [-p DIR] [TEMPLATE]

Create a temporary file with name based on TEMPLATE and print its name.
TEMPLATE must end with XXXXXX (e.g. [/dir/]nameXXXXXX).
Without TEMPLATE, -t tmp.XXXXXX is assumed.

	-d	Make directory, not file
	-q	Fail silently on errors
	-t	Prepend base directory name to TEMPLATE
	-p DIR	Use DIR as a base directory (implies -t)
	-u	Do not create anything; print a name

Base directory is: -p DIR, else $TMPDIR, else /tmp

####################
# modinfo
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: modinfo [-adlpn0] [-F keyword] MODULE

	-a		Shortcut for '-F author'
	-d		Shortcut for '-F description'
	-l		Shortcut for '-F license'
	-p		Shortcut for '-F parm'
	-F keyword	Keyword to look for
	-0		NUL terminated output

####################
# modprobe
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: modprobe [-alrqvsDb] MODULE [SYMBOL=VALUE]...

	-a	Load multiple MODULEs
	-l	List (MODULE is a pattern)
	-r	Remove MODULE (stacks) or do autoclean
	-q	Quiet
	-v	Verbose
	-s	Log to syslog
	-D	Show dependencies
	-b	Apply blacklist to module names too

####################
# more
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: more [FILE]...

View FILE (or stdin) one screenful at a time

####################
# mount
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mount [OPTIONS] [-o OPT] DEVICE NODE

Mount a filesystem. Filesystem autodetection requires /proc.

	-a		Mount all filesystems in fstab
	-f		Dry run
	-i		Don't run mount helper
	-v		Verbose
	-r		Read-only mount
	-t FSTYPE[,...]	Filesystem type(s)
	-O OPT		Mount only filesystems with option OPT (-a only)
-o OPT:
	loop		Ignored (loop devices are autodetected)
	[a]sync		Writes are [a]synchronous
	[no]atime	Disable/enable updates to inode access times
	[no]diratime	Disable/enable atime updates to directories
	[no]relatime	Disable/enable atime updates relative to modification time
	[no]dev		(Dis)allow use of special device files
	[no]exec	(Dis)allow use of executable files
	[no]suid	(Dis)allow set-user-id-root programs
	[r]shared	Convert [recursively] to a shared subtree
	[r]slave	Convert [recursively] to a slave subtree
	[r]private	Convert [recursively] to a private subtree
	[un]bindable	Make mount point [un]able to be bind mounted
	[r]bind		Bind a file or directory [recursively] to another location
	move		Relocate an existing mount point
	remount		Remount a mounted filesystem, changing flags
	ro		Same as -r

There are filesystem-specific -o flags.

####################
# mountpoint
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mountpoint [-q] { [-dn] DIR | -x DEVICE }

Check if DIR is a mountpoint

	-q	Quiet
	-d	Print major:minor of the filesystem
	-n	Print device name of the filesystem
	-x	Print major:minor of DEVICE

####################
# mpstat
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mpstat [-A] [-I SUM|CPU|ALL|SCPU] [-u] [-P num|ALL] [INTERVAL [COUNT]]

Per-processor statistics

	-A			Same as -I ALL -u -P ALL
	-I SUM|CPU|ALL|SCPU	Report interrupt statistics
	-P num|ALL		Processor to monitor
	-u			Report CPU utilization

####################
# mv
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: mv [-finT] SOURCE DEST
or: mv [-fin] SOURCE... { -t DIRECTORY | DIRECTORY }

Rename SOURCE to DEST, or move SOURCEs to DIRECTORY

	-f	Don't prompt before overwriting
	-i	Interactive, prompt before overwrite
	-n	Don't overwrite an existing file
	-T	Refuse to move if DEST is a directory
	-t DIR	Move all SOURCEs into DIR

####################
# nameif
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: nameif [-s] [-c FILE] [IFNAME SELECTOR]...

Rename network interface while it in the down state.
The device matched by SELECTOR is renamed to IFNAME.
SELECTOR can be a combination of:
	driver=STRING
	bus=STRING
	phy_address=NUM
	[mac=]XX:XX:XX:XX:XX:XX

	-c FILE	Configuration file (default: /etc/mactab)
	-s	Log to syslog

####################
# nanddump
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: nanddump [-no] [--bb padbad|skipbad] [-s ADDR] [-l LEN] [-f FILE] MTD_DEVICE

Dump MTD_DEVICE

	-n	Read without ecc
	-o	Dump oob data
	-s ADDR	Start address
	-l LEN	Length
	-f FILE	Dump to file ('-' for stdout)
	--bb METHOD
		skipbad: skip bad blocks
		padbad: substitute bad blocks by 0xff (default)

####################
# nandwrite
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: nandwrite [-np] [-s ADDR] MTD_DEVICE [FILE]

Write to MTD_DEVICE

	-n	Write without ecc
	-p	Pad to page size
	-s ADDR	Start address

####################
# nbd-client
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: nbd-client { [-b BLKSIZE] [-N NAME] [-t SEC] [-p] HOST [PORT] | -d } BLOCKDEV

Connect to HOST and provide network block device on BLOCKDEV

####################
# nc
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: nc [OPTIONS] HOST PORT  - connect
nc [OPTIONS] -l -p PORT [HOST] [PORT]  - listen

	-e PROG	Run PROG after connect (must be last)
	-l	Listen mode, for inbound connects
	-lk	With -e, provides persistent server
	-p PORT	Local port
	-s ADDR	Local address
	-w SEC	Timeout for connects and final net reads
	-i SEC	Delay interval for lines sent
	-n	Don't do DNS resolution
	-u	UDP mode
	-b	Allow broadcasts
	-v	Verbose
	-o FILE	Hex dump traffic
	-z	Zero-I/O mode (scanning)

####################
# netstat
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: netstat [-ral] [-tuwx] [-enWp]

Display networking information

	-r	Routing table
	-a	All sockets
	-l	Listening sockets
		Else: connected sockets
	-t	TCP sockets
	-u	UDP sockets
	-w	Raw sockets
	-x	Unix sockets
		Else: all socket types
	-e	Other/more information
	-n	Don't resolve names
	-W	Wide display
	-p	Show PID/program name for sockets

####################
# nice
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: nice [-n ADJUST] [PROG ARGS]

Change scheduling priority, run PROG

	-n ADJUST	Adjust priority by ADJUST

####################
# nl
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: nl [OPTIONS] [FILE]...

Write FILEs to standard output with line numbers added

	-b STYLE	Which lines to number - a: all, t: nonempty, n: none
	-i N		Line number increment
	-s STRING	Use STRING as line number separator
	-v N		Start from N
	-w N		Width of line numbers

####################
# nmeter
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: nmeter [-d MSEC] FORMAT_STRING

Monitor system in real time

 -d MSEC	Milliseconds between updates, default:1000, none:-1

Format specifiers:
 %Nc or %[cN]	CPU. N - bar size (default 10)
		(displays: S:system U:user N:niced D:iowait I:irq i:softirq)
 %[nINTERFACE]	Network INTERFACE
 %m		Allocated memory
 %[mf]		Free memory
 %[mt]		Total memory
 %s		Allocated swap
 %f		Number of used file descriptors
 %Ni		Total/specific IRQ rate
 %x		Context switch rate
 %p		Forks
 %[pn]		# of processes
 %b		Block io
 %Nt		Time (with N decimal points)
 %NT		Zero-based timestamp (with N decimal points)
 %r		Print <cr> instead of <lf> at EOL

####################
# nohup
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: nohup PROG ARGS

Run PROG immune to hangups, with output to a non-tty

####################
# nologin
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: nologin

Politely refuse a login

####################
# nslookup
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: nslookup HOST [DNS_SERVER]

Query DNS about HOST

####################
# nuke
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: nuke DIR...

Remove DIRs

####################
# od
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: od [-abcdfhilovxs] [-t TYPE] [-A RADIX] [-N SIZE] [-j SKIP] [-S MINSTR] [-w WIDTH] [FILE]...

Print FILEs (or stdin) unambiguously, as octal bytes by default

####################
# openvt
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: openvt [-c N] [-sw] [PROG ARGS]

Start PROG on a new virtual terminal

	-c N	Use specified VT
	-s	Switch to the VT
	-w	Wait for PROG to exit

####################
# partprobe
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: partprobe DEVICE...

Ask kernel to rescan partition table

####################
# paste
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: paste [-d LIST] [-s] [FILE]...

Paste lines from each input file, separated with tab

	-d LIST	Use delimiters from LIST, not tab
	-s      Serial: one file at a time

####################
# patch
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: patch [-RNE] [-p N] [-i DIFF] [ORIGFILE [PATCHFILE]]

	-p N	Strip N leading components from file names
	-i DIFF	Read DIFF instead of stdin
	-R	Reverse patch
	-N	Ignore already applied patches
	-E	Remove output files if they become empty
	--dry-run	Don't actually change files

####################
# pgrep
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: pgrep [-flanovx] [-s SID|-P PPID|PATTERN]

Display process(es) selected by regex PATTERN

	-l	Show command name too
	-a	Show command line too
	-f	Match against entire command line
	-n	Show the newest process only
	-o	Show the oldest process only
	-v	Negate the match
	-x	Match whole name (not substring)
	-s	Match session ID (0 for current)
	-P	Match parent process ID

####################
# pidof
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: pidof [-s] [-o PID] [NAME]...

List PIDs of all processes with names that match NAMEs

	-s	Show only one PID
	-o PID	Omit given pid
		Use %PPID to omit pid of pidof's parent

####################
# ping
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ping [OPTIONS] HOST

Send ICMP ECHO_REQUESTs to HOST

	-4,-6		Force IP or IPv6 name resolution
	-c CNT		Send only CNT pings
	-s SIZE		Send SIZE data bytes in packets (default 56)
	-i SECS		Interval
	-A		Ping as soon as reply is recevied
	-t TTL		Set TTL
	-I IFACE/IP	Source interface or IP address
	-W SEC		Seconds to wait for the first response (default 10)
			(after all -c CNT packets are sent)
	-w SEC		Seconds until ping exits (default:infinite)
			(can exit earlier with -c CNT)
	-q		Quiet, only display output at start/finish
	-p HEXBYTE	Payload pattern

####################
# ping6
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ping6 [OPTIONS] HOST

Send ICMP ECHO_REQUESTs to HOST

	-c CNT		Send only CNT pings
	-s SIZE		Send SIZE data bytes in packets (default 56)
	-i SECS		Interval
	-A		Ping as soon as reply is recevied
	-I IFACE/IP	Source interface or IP address
	-W SEC		Seconds to wait for the first response (default 10)
			(after all -c CNT packets are sent)
	-w SEC		Seconds until ping exits (default:infinite)
			(can exit earlier with -c CNT)
	-q		Quiet, only display output at start/finish
	-p HEXBYTE	Payload pattern

####################
# pipe_progress
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

No help available

####################
# pivot_root
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: pivot_root NEW_ROOT PUT_OLD

Move the current root file system to PUT_OLD and make NEW_ROOT
the new root file system

####################
# pkill
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: pkill [-l|-SIGNAL] [-xfvno] [-s SID|-P PPID|PATTERN]

Send signal to processes selected by regex PATTERN

	-l	List all signals
	-x	Match whole name (not substring)
	-f	Match against entire command line
	-s SID	Match session ID (0 for current)
	-P PPID	Match parent process ID
	-v	Negate the match
	-n	Signal the newest process only
	-o	Signal the oldest process only

####################
# pmap
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: pmap [-xq] PID...

Display process memory usage

	-x	Show details
	-q	Quiet

####################
# popmaildir
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: popmaildir [OPTIONS] MAILDIR [CONN_HELPER ARGS]

Fetch content of remote mailbox to local maildir

	-s		Skip authorization
	-T		Get messages with TOP instead of RETR
	-k		Keep retrieved messages on the server
	-t SEC		Network timeout
	-F 'PROG ARGS'	Filter program (may be repeated)
	-M 'PROG ARGS'	Delivery program

Fetch from plain POP3 server:
popmaildir -k DIR nc pop3.server.com 110 <user_and_pass.txt
Fetch from SSLed POP3 server and delete fetched emails:
popmaildir DIR -- openssl s_client -quiet -connect pop3.server.com:995 <user_and_pass.txt

####################
# poweroff
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: poweroff [-d DELAY] [-nf]

Halt and shut off power

	-d SEC	Delay interval
	-n	Do not sync
	-f	Force (don't go through init)

####################
# powertop
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: powertop

Analyze power consumption on Intel-based laptops

####################
# printenv
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: printenv [VARIABLE]...

Print environment VARIABLEs.
If no VARIABLE specified, print all.

####################
# printf
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: printf FORMAT [ARG]...

Format and print ARG(s) according to FORMAT (a-la C printf)

####################
# ps
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ps [-o COL1,COL2=HEADER] [-T]

Show list of processes

	-o COL1,COL2=HEADER	Select columns for display
	-T			Show threads

####################
# pscan
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: pscan [-cb] [-p MIN_PORT] [-P MAX_PORT] [-t TIMEOUT] [-T MIN_RTT] HOST

Scan HOST, print all open ports

	-c	Show closed ports too
	-b	Show blocked ports too
	-p PORT	Scan from this port (default 1)
	-P PORT	Scan up to this port (default 1024)
	-t MS	Timeout (default 5000 ms)
	-T MS	Minimum rtt (default 5 ms)

####################
# pstree
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: pstree [-p] [PID|USER]

Display process tree, optionally start from USER or PID

	-p	Show pids

####################
# pwd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: pwd

Print the full filename of the current working directory

####################
# pwdx
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: pwdx PID...

Show current directory for PIDs

####################
# raidautorun
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: raidautorun DEVICE

Tell the kernel to automatically search and start RAID arrays

####################
# rdate
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: rdate [-s/-p] HOST

Set and print time from HOST using RFC 868

	-s	Only set system time
	-p	Only print time

####################
# rdev
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: rdev

Print the device node associated with the filesystem mounted at '/'

####################
# readlink
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: readlink [-fnv] FILE

Display the value of a symlink

	-f	Canonicalize by following all symlinks
	-n	Don't add newline
	-v	Verbose

####################
# readprofile
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: readprofile [OPTIONS]

	-m MAPFILE	(Default: /boot/System.map)
	-p PROFILE	(Default: /proc/profile)
	-M NUM		Set the profiling multiplier to NUM
	-i		Print only info about the sampling step
	-v		Verbose
	-a		Print all symbols, even if count is 0
	-b		Print individual histogram-bin counts
	-s		Print individual counters within functions
	-r		Reset all the counters (root only)
	-n		Disable byte order auto-detection

####################
# realpath
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: realpath FILE...

Print absolute pathnames of FILEs

####################
# reboot
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: reboot [-d DELAY] [-nf]

Reboot the system

	-d SEC	Delay interval
	-n	Do not sync
	-f	Force (don't go through init)

####################
# reformime
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: reformime [OPTIONS]

Parse MIME-encoded message on stdin

	-x PREFIX	Extract content of MIME sections to files
	-X PROG ARGS	Filter content of MIME sections through PROG
			Must be the last option

Other options are silently ignored

####################
# renice
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: renice [-n] PRIORITY [[-p|g|u] ID...]...

Change scheduling priority of a running process

	-n	Add PRIORITY to current nice value
		Without -n, nice value is set to PRIORITY
	-p	Process ids (default)
	-g	Process group ids
	-u	Process user names

####################
# reset
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: reset

Reset the screen

####################
# resize
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: resize

Resize the screen

####################
# resume
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: resume BLOCKDEV [OFFSET]

Restore system state from 'suspend-to-disk' data in BLOCKDEV

####################
# rev
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: rev [FILE]...

Reverse lines of FILE

####################
# rfkill
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: rfkill COMMAND [INDEX|TYPE]

Enable/disable wireless devices

Commands:
	list [INDEX|TYPE]	List current state
	block INDEX|TYPE	Disable device
	unblock INDEX|TYPE	Enable device

	TYPE: all, wlan(wifi), bluetooth, uwb(ultrawideband),
		wimax, wwan, gps, fm

####################
# rm
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: rm [-irf] FILE...

Remove (unlink) FILEs

	-i	Always prompt before removing
	-f	Never prompt
	-R,-r	Recurse

####################
# rmdir
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: rmdir [-p] DIRECTORY...

Remove DIRECTORY if it is empty

	-p	Include parents
	--ignore-fail-on-non-empty

####################
# rmmod
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: rmmod [-wfa] [MODULE]...

Unload kernel modules

	-w	Wait until the module is no longer used
	-f	Force unload
	-a	Remove all unused modules (recursively)

####################
# route
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: route [-ne] [-A inet[6]] [{add|del} [-net|-host] TARGET [netmask MASK]
	[gw GATEWAY] [metric N] [mss BYTES] [window BYTES] [reject] [IFACE]]

Show or edit kernel routing tables

	-n	Don't resolve names
	-e	Display other/more information
	-A inet[6]	Select address family

####################
# rtcwake
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: rtcwake [-a | -l | -u] [-d DEV] [-m MODE] [-s SEC | -t TIME]

Enter a system sleep state until specified wakeup time

	-a	Read clock mode from /etc/adjtime (default)
	-l	Clock is set to local time
	-u	Clock is set to UTC time
	-d DEV	Specify the RTC device
	-m MODE	Set sleep state (default: standby)
	-s SEC	Set timeout in SEC seconds from now
	-t TIME	Set timeout to TIME seconds from epoch

####################
# run-init
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: run-init [-d CAP,CAP...] [-n] [-c CONSOLE_DEV] NEW_ROOT NEW_INIT [ARGS]

Free initramfs and switch to another root fs:
chroot to NEW_ROOT, delete all in /, move NEW_ROOT to /,
execute NEW_INIT. PID must be 1. NEW_ROOT must be a mountpoint.

	-c DEV	Reopen stdio to DEV after switch
	-d CAPS	Drop capabilities
	-n	Dry run

####################
# run-parts
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: run-parts [-a ARG]... [-u UMASK] [--reverse] [--test] [--exit-on-error] [--list] DIRECTORY

Run a bunch of scripts in DIRECTORY

	-a ARG		Pass ARG as argument to scripts
	-u UMASK	Set UMASK before running scripts
	--reverse	Reverse execution order
	--test		Dry run
	--exit-on-error	Exit if a script exits with non-zero
	--list		Print names of matching files even if they are not executable

####################
# runcon
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: runcon [-c] [-u USER] [-r ROLE] [-t TYPE] [-l RANGE] PROG ARGS
runcon CONTEXT PROG ARGS

Run PROG in a different security context

	CONTEXT		Complete security context

	-c	Compute process transition context before modifying
	-t TYPE	Type (for same role as parent)
	-u USER	User identity
	-r ROLE	Role
	-l RNG	Levelrange

####################
# rx
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: rx FILE

Receive a file using the xmodem protocol

####################
# script
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: script [-afq] [-t[FILE]] [-c PROG] [OUTFILE]

Default OUTFILE is 'typescript'

	-a	Append output
	-c PROG	Run PROG, not shell
	-q	Quiet
	-t[FILE] Send timing to stderr or FILE

####################
# scriptreplay
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: scriptreplay TIMINGFILE [TYPESCRIPT [DIVISOR]]

Play back typescripts, using timing information

####################
# sed
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: sed [-i[SFX]] [-nrE] [-f FILE]... [-e CMD]... [FILE]...
or: sed [-i[SFX]] [-nrE] CMD [FILE]...

	-e CMD	Add CMD to sed commands to be executed
	-f FILE	Add FILE contents to sed commands to be executed
	-i[SFX]	Edit files in-place (otherwise write to stdout)
		Optionally back files up, appending SFX
	-n	Suppress automatic printing of pattern space
	-r,-E	Use extended regex syntax

If no -e or -f, the first non-option argument is the sed command string.
Remaining arguments are input files (stdin if none).

####################
# selinuxenabled
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

No help available

####################
# sendmail
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: sendmail [-tv] [-f SENDER] [-amLOGIN 4<user_pass.txt | -auUSER -apPASS]
		[-w SECS] [-H 'PROG ARGS' | -S HOST] [RECIPIENT_EMAIL]...

Read email from stdin and send it

Standard options:
	-t		Read additional recipients from message body
	-f SENDER	For use in MAIL FROM:<sender>. Can be empty string
			Default: -auUSER, or username of current UID
	-o OPTIONS	Various options. -oi implied, others are ignored
	-i		-oi synonym, implied and ignored

Busybox specific options:
	-v		Verbose
	-w SECS		Network timeout
	-H 'PROG ARGS'	Run connection helper. Examples:
		openssl s_client -quiet -tls1 -starttls smtp -connect smtp.gmail.com:25
		openssl s_client -quiet -tls1 -connect smtp.gmail.com:465
			$SMTP_ANTISPAM_DELAY: seconds to wait after helper connect
	-S HOST[:PORT]	Server (default $SMTPHOST or 127.0.0.1)
	-amLOGIN	Log in using AUTH LOGIN
	-amPLAIN	or AUTH PLAIN
			(-amCRAM-MD5 not supported)
	-auUSER		Username for AUTH
	-apPASS 	Password for AUTH

If no -a options are given, authentication is not done.
If -amLOGIN is given but no -au/-ap, user/password is read from fd #4.
Other options are silently ignored; -oi is implied.
Use makemime to create emails with attachments.

####################
# seq
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: seq [-w] [-s SEP] [FIRST [INC]] LAST

Print numbers from FIRST to LAST, in steps of INC.
FIRST, INC default to 1.

	-w	Pad to last with leading zeros
	-s SEP	String separator

####################
# sestatus
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: sestatus [-vb]

	-v	Verbose
	-b	Display current state of booleans

####################
# setconsole
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: setconsole [-r] [DEVICE]

Make writes to /dev/console appear on DEVICE (default: /dev/tty).
Does not redirect kernel log output or reads from /dev/console.

	-r	Reset: writes to /dev/console go to kernel log tty(s)

####################
# setenforce
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: setenforce [Enforcing | Permissive | 1 | 0]

####################
# setfattr
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: setfattr [-h] -n|-x ATTR [-v VALUE] FILE...

Set extended attributes

	-h		Do not follow symlinks
	-x ATTR		Remove attribute ATTR
	-n ATTR		Set attribute ATTR to VALUE
	-v VALUE	(default: empty)

####################
# setfont
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: setfont [-m MAPFILE] [-C TTY] FILE

Load a console font

	-m MAPFILE	Load console screen map
	-C TTY		Affect TTY instead of /dev/tty

####################
# setkeycodes
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: setkeycodes { SCANCODE KEYCODE }...

Modify kernel's scancode-to-keycode map,
allowing unusual keyboards to generate usable keycodes.

SCANCODE is either xx or e0xx (hexadecimal), KEYCODE is decimal.

####################
# setlogcons
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: setlogcons [N]

Pin kernel output to VT console N. Default:0 (do not pin)

####################
# setpriv
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: setpriv [OPTIONS] PROG ARGS

Run PROG with different privilege settings

-d,--dump		Show current capabilities
--nnp,--no-new-privs	Ignore setuid/setgid bits and file capabilities
--inh-caps CAP,CAP	Set inheritable capabilities
--ambient-caps CAP,CAP	Set ambient capabilities

####################
# setserial
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: setserial [-abGvz] { DEVICE [PARAMETER [ARG]]... | -g DEVICE... }

Print or set serial port parameters

	-a	Print all
	-b	Print summary
	-G	Print as setserial PARAMETERs
	-v	Verbose
	-z	Zero out serial flags before setting
	-g	All args are device names

PARAMETERs: (* = takes ARG, ^ = can be turned off by preceding ^)
	*port, *irq, *divisor, *uart, *baud_base, *close_delay, *closing_wait,
	^fourport, ^auto_irq, ^skip_test, ^sak, ^session_lockout, ^pgrp_lockout,
	^callout_nohup, ^split_termios, ^hup_notify, ^low_latency, autoconfig,
	spd_normal, spd_hi, spd_vhi, spd_shi, spd_warp, spd_cust
ARG for uart:
	unknown, 8250, 16450, 16550, 16550A, Cirrus, 16650, 16650V2, 16750,
	16950, 16954, 16654, 16850, RSA, NS16550A, XSCALE, RM9000, OCTEON, AR7,
	U6_16550A

####################
# setsid
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: setsid [-c] PROG ARGS

Run PROG in a new session. PROG will have no controlling terminal
and will not be affected by keyboard signals (^C etc).

	-c	Set controlling terminal to stdin

####################
# setuidgid
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: setuidgid USER PROG ARGS

Set uid and gid to USER's uid and gid, drop supplementary group ids,
run PROG

####################
# sh
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: sh [-il] [-|+Cabefmnuvx] [-|+o OPT]... [-c 'SCRIPT' [ARG0 ARGS] | FILE [ARGS] | -s [ARGS]]

Unix shell interpreter

####################
# sha1sum
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: sha1sum [-c[sw]] [FILE]...

Print or check SHA1 checksums

	-c	Check sums against list in FILEs
	-s	Don't output anything, status code shows success
	-w	Warn about improperly formatted checksum lines

####################
# sha256sum
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: sha256sum [-c[sw]] [FILE]...

Print or check SHA256 checksums

	-c	Check sums against list in FILEs
	-s	Don't output anything, status code shows success
	-w	Warn about improperly formatted checksum lines

####################
# sha3sum
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: sha3sum [-c[sw]] [-a BITS] [FILE]...

Print or check SHA3 checksums

	-c	Check sums against list in FILEs
	-s	Don't output anything, status code shows success
	-w	Warn about improperly formatted checksum lines
	-a BITS	224 (default), 256, 384, 512

####################
# sha512sum
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: sha512sum [-c[sw]] [FILE]...

Print or check SHA512 checksums

	-c	Check sums against list in FILEs
	-s	Don't output anything, status code shows success
	-w	Warn about improperly formatted checksum lines

####################
# showkey
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: showkey [-a | -k | -s]

Show keys pressed

	-a	Display decimal/octal/hex values of the keys
	-k	Display interpreted keycodes (default)
	-s	Display raw scan-codes

####################
# shred
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: shred [-fuz] [-n N] [-s SIZE] FILE...

Overwrite/delete FILEs

	-f	Chmod to ensure writability
	-s SIZE	Size to write
	-n N	Overwrite N times (default 3)
	-z	Final overwrite with zeros
	-u	Remove file

####################
# shuf
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: shuf [-e|-i L-H] [-n NUM] [-o FILE] [-z] [FILE|ARG...]

Randomly permute lines

	-e	Treat ARGs as lines
	-i L-H	Treat numbers L-H as lines
	-n NUM	Output at most NUM lines
	-o FILE	Write to FILE, not standard output
	-z	End lines with zero byte, not newline

####################
# slattach
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: slattach [-ehmLF] [-c SCRIPT] [-s BAUD] [-p PROTOCOL] SERIAL_DEVICE

Configure serial line as SLIP network interface

	-p PROT	Protocol: slip, cslip (default), slip6, clisp6, adaptive
	-s BAUD	Line speed
	-e	Exit after initialization
	-h	Exit if carrier is lost (else never exits)
	-c PROG	Run PROG on carrier loss
	-m	Do NOT set raw 8bit mode
	-L	Enable 3-wire operation
	-F	Disable RTS/CTS flow control

####################
# sleep
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: sleep [N]...

Pause for a time equal to the total of the args given, where each arg can
have an optional suffix of (s)econds, (m)inutes, (h)ours, or (d)ays

####################
# smemcap
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: smemcap >SMEMDATA.TAR

Collect memory usage data in /proc and write it to stdout

####################
# sort
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: sort [-nrugMcszbdfiokt] [-o FILE] [-k START[.OFS][OPTS][,END[.OFS][OPTS]] [-t CHAR] [FILE]...

Sort lines of text

	-o FILE	Output to FILE
	-c	Check whether input is sorted
	-b	Ignore leading blanks
	-f	Ignore case
	-i	Ignore unprintable characters
	-d	Dictionary order (blank or alphanumeric only)
	-n	Sort numbers
	-g	General numerical sort
	-M	Sort month
	-V	Sort version
	-t CHAR	Field separator
	-k N[,M] Sort by Nth field
	-r	Reverse sort order
	-s	Stable (don't sort ties alphabetically)
	-u	Suppress duplicate lines
	-z	NUL terminated input and output

####################
# split
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: split [OPTIONS] [INPUT [PREFIX]]

	-b N[k|m]	Split by N (kilo|mega)bytes
	-l N		Split by N lines
	-a N		Use N letters as suffix

####################
# ssl_client
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ssl_client [-e] -s FD [-r FD] [-n SNI]

####################
# start-stop-daemon
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: start-stop-daemon [OPTIONS] [-S|-K] ... [-- ARGS...]

Search for matching processes, and then
-K: stop all matching processes
-S: start a process unless a matching process is found

Process matching:
	-u USERNAME|UID	Match only this user's processes
	-n NAME		Match processes with NAME
			in comm field in /proc/PID/stat
	-x EXECUTABLE	Match processes with this command
			in /proc/PID/cmdline
	-p FILE		Match a process with PID from FILE
	All specified conditions must match
-S only:
	-x EXECUTABLE	Program to run
	-a NAME		Zeroth argument
	-b		Background
	-N N		Change nice level
	-c USER[:[GRP]]	Change user/group
	-m		Write PID to pidfile specified by -p
-K only:
	-s SIG		Signal to send
	-t		Match only, exit with 0 if found
Other:
	-o		Exit with status 0 if nothing is done
	-v		Verbose
	-q		Quiet

####################
# stat
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: stat [-ltf] [-c FMT] FILE...

Display file (default) or filesystem status

	-c FMT	Use the specified format
	-f	Display filesystem status
	-L	Follow links
	-t	Terse display
	-Z	Print security context

FMT sequences for files:
 %a	Access rights in octal
 %A	Access rights in human readable form
 %b	Number of blocks allocated (see %B)
 %B	Size in bytes of each block reported by %b
 %d	Device number in decimal
 %D	Device number in hex
 %f	Raw mode in hex
 %F	File type
 %g	Group ID
 %G	Group name
 %h	Number of hard links
 %i	Inode number
 %n	File name
 %N	File name, with -> TARGET if symlink
 %o	I/O block size
 %s	Total size in bytes
 %t	Major device type in hex
 %T	Minor device type in hex
 %u	User ID
 %U	User name
 %x	Time of last access
 %X	Time of last access as seconds since Epoch
 %y	Time of last modification
 %Y	Time of last modification as seconds since Epoch
 %z	Time of last change
 %Z	Time of last change as seconds since Epoch

FMT sequences for file systems:
 %a	Free blocks available to non-superuser
 %b	Total data blocks
 %c	Total file nodes
 %d	Free file nodes
 %f	Free blocks
 %C	Security context in selinux
 %i	File System ID in hex
 %l	Maximum length of filenames
 %n	File name
 %s	Block size (for faster transfer)
 %S	Fundamental block size (for block counts)
 %t	Type in hex
 %T	Type in human readable form

####################
# strings
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: strings [-fo] [-t o|d|x] [-n LEN] [FILE]...

Display printable strings in a binary file

	-f		Precede strings with filenames
	-o		Precede strings with octal offsets
	-t o|d|x	Precede strings with offsets in base 8/10/16
	-n LEN		At least LEN characters form a string (default 4)

####################
# stty
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: stty [-a|g] [-F DEVICE] [SETTING]...

Without arguments, prints baud rate, line discipline,
and deviations from stty sane

	-F DEVICE	Open device instead of stdin
	-a		Print all current settings in human-readable form
	-g		Print in stty-readable form
	[SETTING]	See manpage

####################
# sum
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: sum [-rs] [FILE]...

Checksum and count the blocks in a file

	-r	Use BSD sum algorithm (1K blocks)
	-s	Use System V sum algorithm (512byte blocks)

####################
# svc
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: svc [-udopchaitkx] SERVICE_DIR...

Control services monitored by runsv supervisor

	-u	If service is not running, start it; restart if it stops
	-d	If service is running, send TERM+CONT signals; do not restart it
	-o	Once: if service is not running, start it; do not restart it
	-pchaitk Send STOP, CONT, HUP, ALRM, INT, TERM, KILL signal to service
	-x	Exit: runsv will exit as soon as the service is down

####################
# svok
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: svok SERVICE_DIR

Check whether runsv supervisor is running.
Exit code is 0 if it does, 100 if it does not,
111 (with error message) if SERVICE_DIR does not exist.

####################
# swapoff
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: swapoff [-a] [DEVICE]

Stop swapping on DEVICE

	-a	Stop swapping on all swap devices

####################
# swapon
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: swapon [-a] [-e] [-d[POL]] [DEVICE]

Start swapping on DEVICE

	-a	Start swapping on all swap devices
	-d[POL]	Discard blocks at swapon (POL=once),
		as freed (POL=pages), or both (POL omitted)
	-e	Silently skip devices that do not exist

####################
# switch_root
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: switch_root [-c CONSOLE_DEV] NEW_ROOT NEW_INIT [ARGS]

Free initramfs and switch to another root fs:
chroot to NEW_ROOT, delete all in /, move NEW_ROOT to /,
execute NEW_INIT. PID must be 1. NEW_ROOT must be a mountpoint.

	-c DEV	Reopen stdio to DEV after switch

####################
# sync
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: sync

Write all buffered blocks to disk

####################
# sysctl
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: sysctl [-enq] { -a | -p [FILE]... | [-w] [KEY[=VALUE]]... }

Show/set kernel parameters

	-e	Don't warn about unknown keys
	-n	Don't show key names
	-q      Quiet
	-a	Show all values
	-p	Set values from FILEs (default /etc/sysctl.conf)
	-w	Set values

####################
# syslogd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: syslogd [OPTIONS]

System logging utility

	-n		Run in foreground
	-R HOST[:PORT]	Log to HOST:PORT (default PORT:514)
	-L		Log locally and via network (default is network only if -R)
	-C[size_kb]	Log to shared mem buffer (use logread to read it)
	-K		Log to kernel printk buffer (use dmesg to read it)
	-O FILE		Log to FILE (default: /var/log/messages, stdout if -)
	-s SIZE		Max size (KB) before rotation (default 200KB, 0=off)
	-b N		N rotated logs to keep (default 1, max 99, 0=purge)
	-l N		Log only messages more urgent than prio N (1-8)
	-S		Smaller output
	-t		Strip client-generated timestamps
	-D		Drop duplicates
	-f FILE		Use FILE as config (default:/etc/syslog.conf)

####################
# tac
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: tac [FILE]...

Concatenate FILEs and print them in reverse

####################
# tail
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: tail [OPTIONS] [FILE]...

Print last 10 lines of FILEs (or stdin) to.
With more than one FILE, precede each with a filename header.

	-c [+]N[bkm]	Print last N bytes
	-n N[bkm]	Print last N lines
	-n +N[bkm]	Start on Nth line and print the rest
			(b:*512 k:*1024 m:*1024^2)
	-q		Never print headers
	-v		Always print headers
	-f		Print data as file grows
	-F		Same as -f, but keep retrying
	-s SECONDS	Wait SECONDS between reads with -f

####################
# tar
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: tar c|x|t [-ZzJjahmvokO] [-f TARFILE] [-C DIR] [-T FILE] [-X FILE] [LONGOPT]... [FILE]...

Create, extract, or list files from a tar file

	c	Create
	x	Extract
	t	List
	-f FILE	Name of TARFILE ('-' for stdin/out)
	-C DIR	Change to DIR before operation
	-v	Verbose
	-O	Extract to stdout
	-m	Don't restore mtime
	-o	Don't restore user:group
	-k	Don't replace existing files
	-Z	(De)compress using compress
	-z	(De)compress using gzip
	-J	(De)compress using xz
	-j	(De)compress using bzip2
	--lzma	(De)compress using lzma
	-a	(De)compress based on extension
	-h	Follow symlinks
	-T FILE	File with names to include
	-X FILE	File with glob patterns to exclude
	--exclude PATTERN	Glob pattern to exclude
	--overwrite		Replace existing files
	--strip-components NUM	NUM of leading components to strip
	--no-recursion		Don't descend in directories
	--numeric-owner		Use numeric user:group
	--no-same-permissions	Don't restore access permissions
	--to-command COMMAND	Pipe files to COMMAND

####################
# tc
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: tc OBJECT CMD [dev STRING]

OBJECT: qdisc|class|filter
CMD: add|del|change|replace|show

qdisc [handle QHANDLE] [root|ingress|parent CLASSID]
	[[QDISC_KIND] [help|OPTIONS]]
	QDISC_KIND := [p|b]fifo|tbf|prio|cbq|red|etc.
qdisc show [dev STRING] [ingress]
class [classid CLASSID] [root|parent CLASSID]
	[[QDISC_KIND] [help|OPTIONS] ]
class show [ dev STRING ] [root|parent CLASSID]
filter [pref PRIO] [protocol PROTO]
	[root|classid CLASSID] [handle FILTERID]
	[[FILTER_TYPE] [help|OPTIONS]]
filter show [dev STRING] [root|parent CLASSID]

####################
# tcpsvd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: tcpsvd [-hEv] [-c N] [-C N[:MSG]] [-b N] [-u USER] [-l NAME] IP PORT PROG

Create TCP socket, bind to IP:PORT and listen for incoming connections.
Run PROG for each connection.

	IP PORT		IP:PORT to listen on
	PROG ARGS	Program to run
	-u USER[:GRP]	Change to user/group after bind
	-c N		Up to N connections simultaneously (default 30)
	-b N		Allow backlog of approximately N TCP SYNs (default 20)
	-C N[:MSG]	Allow only up to N connections from the same IP:
			new connections from this IP address are closed
			immediately, MSG is written to the peer before close
	-E		Don't set up environment
	-h		Look up peer's hostname
	-l NAME		Local hostname (else look up local hostname in DNS)
	-v		Verbose

Environment if no -E:
PROTO='TCP'
TCPREMOTEADDR='ip:port' ('[ip]:port' for IPv6)
TCPLOCALADDR='ip:port'
TCPORIGDSTADDR='ip:port' of destination before firewall
	Useful for REDIRECTed-to-local connections:
	iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to 8080
TCPCONCURRENCY=num_of_connects_from_this_ip
If -h:
TCPLOCALHOST='hostname' (-l NAME is used if specified)
TCPREMOTEHOST='hostname'

####################
# tee
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: tee [-ai] [FILE]...

Copy stdin to each FILE, and also to stdout

	-a	Append to the given FILEs, don't overwrite
	-i	Ignore interrupt signals (SIGINT)

####################
# telnet
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: telnet [-a] [-l USER] HOST [PORT]

Connect to telnet server

	-a	Automatic login with $USER variable
	-l USER	Automatic login as USER

####################
# telnetd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: telnetd [OPTIONS]

Handle incoming telnet connections

	-l LOGIN	Exec LOGIN on connect
	-f ISSUE_FILE	Display ISSUE_FILE instead of /etc/issue
	-K		Close connection as soon as login exits
			(normally wait until all programs close slave pty)
	-p PORT		Port to listen on
	-b ADDR[:PORT]	Address to bind to
	-F		Run in foreground
	-i		Inetd mode
	-w SEC		Inetd 'wait' mode, linger time SEC
		inetd.conf line: 23 stream tcp wait root telnetd telnetd -w10
	-S		Log to syslog (implied by -i or without -F and -w)

####################
# test
####################

####################
# tftp
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: tftp [OPTIONS] HOST [PORT]

Transfer a file from/to tftp server

	-l FILE	Local FILE
	-r FILE	Remote FILE
	-g	Get file
	-p	Put file
	-b SIZE	Transfer blocks in bytes

####################
# tftpd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: tftpd [-crl] [-u USER] [DIR]

Transfer a file on tftp client's request

tftpd is an inetd service, inetd.conf line:
	69 dgram udp nowait root tftpd tftpd -l /files/to/serve
Can be run from udpsvd:
	udpsvd -vE 0.0.0.0 69 tftpd /files/to/serve

	-r	Prohibit upload
	-c	Allow file creation via upload
	-u USER	Access files as USER
	-l	Log to syslog (inetd mode requires this)

####################
# time
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: time [-vpa] [-o FILE] PROG ARGS

Run PROG, display resource usage when it exits

	-v	Verbose
	-p	POSIX output format
	-f FMT	Custom format
	-o FILE	Write result to FILE
	-a	Append (else overwrite)

####################
# timeout
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: timeout [-s SIG] SECS PROG ARGS

Run PROG. Send SIG to it if it is not gone in SECS seconds.
Default SIG: TERM.

####################
# top
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: top [-bmH] [-n COUNT] [-d SECONDS]

Show a view of process activity in real time.
Read the status of all processes from /proc each SECONDS
and show a screenful of them.
Keys:
	N/M/P/T: show CPU usage, sort by pid/mem/cpu/time
	S: show memory
	R: reverse sort
	H: toggle threads, 1: toggle SMP
	Q,^C: exit
Options:
	-b	Batch mode
	-n N	Exit after N iterations
	-d SEC	Delay between updates
	-m	Same as 's' key
	-H	Show threads

####################
# touch
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: touch [-cham] [-d DATE] [-t DATE] [-r FILE] FILE...

Update mtime of FILEs

	-c	Don't create files
	-h	Don't follow links
	-a	Change only atime
	-m	Change only mtime
	-d DT	Date/time to use
	-t DT	Date/time to use
	-r FILE	Use FILE's date/time

####################
# tr
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: tr [-cds] STRING1 [STRING2]

Translate, squeeze, or delete characters from stdin, writing to stdout

	-c	Take complement of STRING1
	-d	Delete input characters coded STRING1
	-s	Squeeze multiple output characters of STRING2 into one character

####################
# traceroute
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: traceroute [-46IFlnrv] [-f 1ST_TTL] [-m MAXTTL] [-q PROBES] [-p PORT]
	[-t TOS] [-w WAIT_SEC] [-s SRC_IP] [-i IFACE]
	[-z PAUSE_MSEC] HOST [BYTES]

Trace the route to HOST

	-4,-6	Force IP or IPv6 name resolution
	-F	Set don't fragment bit
	-I	Use ICMP ECHO instead of UDP datagrams
	-l	Display TTL value of the returned packet
	-n	Print numeric addresses
	-r	Bypass routing tables, send directly to HOST
	-v	Verbose
	-f N	First number of hops (default 1)
	-m N	Max number of hops
	-q N	Number of probes per hop (default 3)
	-p N	Base UDP port number used in probes
		(default 33434)
	-s IP	Source address
	-i IFACE Source interface
	-t N	Type-of-service in probe packets (default 0)
	-w SEC	Wait for a response (default 3)
	-z MSEC	Wait before each send

####################
# traceroute6
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: traceroute6 [-Inrv] [-f 1ST_TTL] [-m MAXTTL] [-q PROBES] [-p PORT]
	[-t TOS] [-w WAIT_SEC] [-s SRC_IP] [-i IFACE]
	[-z PAUSE_MSEC] HOST [BYTES]

Trace the route to HOST

	-I	Use ICMP ECHO instead of UDP datagrams
	-n	Print numeric addresses
	-r	Bypass routing tables, send directly to HOST
	-v	Verbose
	-f N	First number of hops (default 1)
	-m N	Max number of hops
	-q N	Number of probes per hop (default 3)
	-p N	Base UDP port number used in probes
		(default 33434)
	-s IP	Source address
	-i IFACE Source interface
	-t N	Type-of-service in probe packets (default 0)
	-w SEC	Wait for a response (default 3)
	-z MSEC	Wait before each send

####################
# true
####################

####################
# truncate
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: truncate [-c] -s SIZE FILE...

Truncate FILEs to SIZE

	-c	Do not create files
	-s SIZE

####################
# ts
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ts [-is] [STRFTIME]

Pipe stdin to stdout, add timestamp to each line

	-s	Time since start
	-i	Time since previous line

####################
# tty
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: tty [-s]

Print file name of stdin's terminal

	-s	Print nothing, only return exit status

####################
# ttysize
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ttysize [w] [h]

Print dimensions of stdin tty, or 80x24

####################
# tunctl
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: tunctl [-f DEVICE] [-t NAME | -d NAME] [-u USER] [-g GRP] [-b]

Create or delete TUN/TAP interfaces

	-f DEV	TUN device (default /dev/net/tun)
	-t NAME	Create iface (default: tapN)
	-d NAME	Delete iface
	-u USER	Set iface owner
	-g GRP	Set iface group
	-b	Brief output

####################
# tune2fs
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: tune2fs [-c MAX_MOUNT_COUNT] [-i DAYS] [-C MOUNT_COUNT] [-L LABEL] BLOCKDEV

Adjust filesystem options on ext[23] filesystems

####################
# ubiattach
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ubiattach -m MTD_NUM [-d UBI_NUM] [-O VID_HDR_OFF] UBI_CTRL_DEV

Attach MTD device to UBI

	-m MTD_NUM	MTD device number to attach
	-d UBI_NUM	UBI device number to assign
	-O VID_HDR_OFF	VID header offset

####################
# ubidetach
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ubidetach -d UBI_NUM UBI_CTRL_DEV

Detach MTD device from UBI

	-d UBI_NUM	UBI device number

####################
# ubimkvol
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ubimkvol -N NAME [-s SIZE | -m] UBI_DEVICE

Create UBI volume

	-a ALIGNMENT	Volume alignment (default 1)
	-m		Set volume size to maximum available
	-n VOLID	Volume ID. If not specified,
			assigned automatically
	-N NAME		Volume name
	-s SIZE		Size in bytes
	-t TYPE		Volume type (static|dynamic)

####################
# ubirename
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ubirename UBI_DEVICE OLD_VOLNAME NEW_VOLNAME [OLD2 NEW2]...

Rename UBI volumes on UBI_DEVICE

####################
# ubirmvol
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ubirmvol -n VOLID | -N VOLNAME UBI_DEVICE

Remove UBI volume

	-n VOLID	Volume ID
	-N VOLNAME	Volume name

####################
# ubirsvol
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ubirsvol -n VOLID -s SIZE UBI_DEVICE

Resize UBI volume

	-n VOLID	Volume ID
	-s SIZE		Size in bytes

####################
# ubiupdatevol
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: ubiupdatevol -t UBI_DEVICE | [-s SIZE] UBI_DEVICE IMG_FILE

Update UBI volume

	-t	Truncate to zero size
	-s SIZE	Size in bytes to resize to

####################
# udhcpc
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: udhcpc [-fbqvRB] [-a[MSEC]] [-t N] [-T SEC] [-A SEC|-n]
	[-i IFACE] [-P PORT] [-s PROG] [-p PIDFILE]
	[-oC] [-r IP] [-V VENDOR] [-F NAME] [-x OPT:VAL]... [-O OPT]...

	-i IFACE	Interface to use (default eth0)
	-P PORT		Use PORT (default 68)
	-s PROG		Run PROG at DHCP events (default /usr/share/udhcpc/default.script)
	-p FILE		Create pidfile
	-B		Request broadcast replies
	-t N		Send up to N discover packets (default 3)
	-T SEC		Pause between packets (default 3)
	-A SEC		Wait if lease is not obtained (default 20)
	-b		Background if lease is not obtained
	-n		Exit if lease is not obtained
	-q		Exit after obtaining lease
	-R		Release IP on exit
	-f		Run in foreground
	-S		Log to syslog too
	-a[MSEC]	Validate offered address with ARP ping
	-r IP		Request this IP address
	-o		Don't request any options (unless -O is given)
	-O OPT		Request option OPT from server (cumulative)
	-x OPT:VAL	Include option OPT in sent packets (cumulative)
			Examples of string, numeric, and hex byte opts:
			-x hostname:bbox - option 12
			-x lease:3600 - option 51 (lease time)
			-x 0x3d:0100BEEFC0FFEE - option 61 (client id)
			-x 14:'"dumpfile"' - option 14 (shell-quoted)
	-F NAME		Ask server to update DNS mapping for NAME
	-V VENDOR	Vendor identifier (default 'udhcp VERSION')
	-C		Don't send MAC as client identifier
	-v		Verbose
Signals:
	USR1	Renew lease
	USR2	Release lease

####################
# udhcpc6
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: udhcpc6 [-fbqvR] [-t N] [-T SEC] [-A SEC|-n] [-i IFACE] [-s PROG]
	[-p PIDFILE] [-P PORT] [-ldo] [-r IPv6] [-x OPT:VAL]... [-O OPT]...

	-i IFACE	Interface to use (default eth0)
	-p FILE		Create pidfile
	-s PROG		Run PROG at DHCP events (default /usr/share/udhcpc/default.script)
	-B		Request broadcast replies
	-t N		Send up to N discover packets
	-T SEC		Pause between packets (default 3)
	-A SEC		Wait if lease is not obtained (default 20)
	-b		Background if lease is not obtained
	-n		Exit if lease is not obtained
	-q		Exit after obtaining lease
	-R		Release IP on exit
	-f		Run in foreground
	-S		Log to syslog too
	-P PORT		Use PORT (default 546)
	-l		Send 'information request' instead of 'solicit'
			(used for servers which do not assign IPv6 addresses)
	-r IPv6		Request this address ('no' to not request any IP)
	-d		Request prefix
	-o		Don't request any options (unless -O is given)
	-O OPT		Request option OPT from server (cumulative)
	-x OPT:VAL	Include option OPT in sent packets (cumulative)
			Examples of string, numeric, and hex byte opts:
			-x hostname:bbox - option 12
			-x lease:3600 - option 51 (lease time)
			-x 0x3d:0100BEEFC0FFEE - option 61 (client id)
			-x 14:'"dumpfile"' - option 14 (shell-quoted)
	-v		Verbose
Signals:
	USR1	Renew lease
	USR2	Release lease

####################
# udhcpd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: udhcpd [-fS] [-I ADDR] [-P PORT] [CONFFILE]

DHCP server

	-f	Run in foreground
	-S	Log to syslog too
	-I ADDR	Local address
	-a MSEC	Timeout for ARP ping (default 2000)
	-P PORT	Use PORT (default 67)
Signals:
	USR1	Update lease file

####################
# udpsvd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: udpsvd [-hEv] [-c N] [-u USER] [-l NAME] IP PORT PROG

Create UDP socket, bind to IP:PORT and wait for incoming packets.
Run PROG for each packet, redirecting all further packets with same
peer ip:port to it.

	IP PORT		IP:PORT to listen on
	PROG ARGS	Program to run
	-u USER[:GRP]	Change to user/group after bind
	-c N		Up to N connections simultaneously (default 30)
	-E		Don't set up environment
	-h		Look up peer's hostname
	-l NAME		Local hostname (else look up local hostname in DNS)
	-v		Verbose

Environment if no -E:
PROTO='UDP'
UDPREMOTEADDR='ip:port' ('[ip]:port' for IPv6)
UDPLOCALADDR='ip:port'
If -h:
UDPLOCALHOST='hostname' (-l NAME is used if specified)
UDPREMOTEHOST='hostname'

####################
# uevent
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: uevent [PROG ARGS]

uevent runs PROG for every netlink notification.
PROG's environment contains data passed from the kernel.
Typical usage (daemon for dynamic device node creation):
	# uevent mdev & mdev -s

####################
# umount
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: umount [-rlfda] [-t FSTYPE] FILESYSTEM|DIRECTORY

Unmount filesystems

	-a	Unmount all filesystems
	-r	Remount devices read-only if mount is busy
	-l	Lazy umount (detach filesystem)
	-f	Force umount (i.e., unreachable NFS server)
	-d	Free loop device if it has been used
	-t FSTYPE[,...]	Unmount only these filesystem type(s)

####################
# uname
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: uname [-amnrspvio]

Print system information

	-a	Print all
	-m	Machine (hardware) type
	-n	Hostname
	-r	Kernel release
	-s	Kernel name (default)
	-p	Processor type
	-v	Kernel version
	-i	Hardware platform
	-o	OS name

####################
# uncompress
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: uncompress [-cf] [FILE]...

Decompress FILEs (or stdin)

	-c	Write to stdout
	-f	Overwrite

####################
# unexpand
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: unexpand [-fa][-t N] [FILE]...

Convert spaces to tabs, writing to stdout

	-a	Convert all blanks
	-f	Convert only leading blanks
	-t N	Tabstops every N chars

####################
# uniq
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: uniq [-cduiz] [-f,s,w N] [FILE [OUTFILE]]

Discard duplicate lines

	-c	Prefix lines by the number of occurrences
	-d	Only print duplicate lines
	-u	Only print unique lines
	-i	Ignore case
	-z	NUL terminated output
	-f N	Skip first N fields
	-s N	Skip first N chars (after any skipped fields)
	-w N	Compare N characters in line

####################
# unix2dos
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: unix2dos [-ud] [FILE]

Convert FILE in-place from Unix to DOS format.
When no file is given, use stdin/stdout.

	-u	dos2unix
	-d	unix2dos

####################
# unlink
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: unlink FILE

Delete FILE by calling unlink()

####################
# unlzma
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: unlzma [-cfk] [FILE]...

Decompress FILEs (or stdin)

	-c	Write to stdout
	-f	Force
	-k	Keep input files
	-t	Test integrity

####################
# unlzop
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: unlzop [-cfUvF] [FILE]...

	-c	Write to stdout
	-f	Force
	-U	Delete input files
	-t	Test integrity
	-v	Verbose
	-F	Don't verify checksum

####################
# unshare
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: unshare [OPTIONS] [PROG ARGS]

	-m,--mount[=FILE]	Unshare mount namespace
	-u,--uts[=FILE]		Unshare UTS namespace (hostname etc.)
	-i,--ipc[=FILE]		Unshare System V IPC namespace
	-n,--net[=FILE]		Unshare network namespace
	-p,--pid[=FILE]		Unshare PID namespace
	-U,--user[=FILE]	Unshare user namespace
	-f			Fork before execing PROG
	-r			Map current user to root (implies -U)
	--mount-proc[=DIR]	Mount /proc filesystem first (implies -m)
	--propagation slave|shared|private|unchanged
				Modify mount propagation in mount namespace
	--setgroups allow|deny	Control the setgroups syscall in user namespaces

####################
# unxz
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: unxz [-cfk] [FILE]...

Decompress FILEs (or stdin)

	-c	Write to stdout
	-f	Force
	-k	Keep input files
	-t	Test integrity

####################
# unzip
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: unzip [-lnojpq] FILE[.zip] [FILE]... [-x FILE]... [-d DIR]

Extract FILEs from ZIP archive

	-l	List contents (with -q for short form)
	-n	Never overwrite files (default: ask)
	-o	Overwrite
	-j	Do not restore paths
	-p	Write to stdout
	-t	Test
	-q	Quiet
	-x FILE	Exclude FILEs
	-d DIR	Extract into DIR

####################
# uptime
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: uptime

Display the time since the last boot

####################
# usleep
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: usleep N

Pause for N microseconds

####################
# uudecode
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: uudecode [-o OUTFILE] [INFILE]

Uudecode a file
Finds OUTFILE in uuencoded source unless -o is given

####################
# uuencode
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: uuencode [-m] [FILE] STORED_FILENAME

Uuencode FILE (or stdin) to stdout

	-m	Use base64 encoding per RFC1521

####################
# vconfig
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: vconfig COMMAND [OPTIONS]

Create and remove virtual ethernet devices

	add IFACE VLAN_ID
	rem VLAN_NAME
	set_flag IFACE 0|1 VLAN_QOS
	set_egress_map VLAN_NAME SKB_PRIO VLAN_QOS
	set_ingress_map VLAN_NAME SKB_PRIO VLAN_QOS
	set_name_type NAME_TYPE

####################
# vi
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: vi [-c CMD] [-R] [-H] [FILE]...

Edit FILE

	-c CMD	Initial command to run ($EXINIT also available)
	-R	Read-only
	-H	List available features

####################
# volname
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: volname [DEVICE]

Show CD volume name of the DEVICE (default /dev/cdrom)

####################
# watch
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: watch [-n SEC] [-t] PROG ARGS

Run PROG periodically

	-n SEC	Period (default 2)
	-t	Don't print header

####################
# watchdog
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: watchdog [-t N[ms]] [-T N[ms]] [-F] DEV

Periodically write to watchdog device DEV

	-T N	Reboot after N seconds if not reset (default 60)
	-t N	Reset every N seconds (default 30)
	-F	Run in foreground

Use 500ms to specify period in milliseconds

####################
# wc
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: wc [-cmlwL] [FILE]...

Count lines, words, and bytes for FILEs (or stdin)

	-c	Count bytes
	-m	Count characters
	-l	Count newlines
	-w	Count words
	-L	Print longest line length

####################
# wget
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: wget [-cqS] [--spider] [-O FILE] [-o LOGFILE] [--header 'HEADER: VALUE'] [-Y on/off]
	[--no-check-certificate] [-P DIR] [-U AGENT] [-T SEC] URL...

Retrieve files via HTTP or FTP

	--spider	Only check URL existence: $? is 0 if exists
	--no-check-certificate	Don't validate the server's certificate
	-c		Continue retrieval of aborted transfer
	-q		Quiet
	-P DIR		Save to DIR (default .)
	-S    		Show server response
	-T SEC		Network read timeout is SEC seconds
	-O FILE		Save to FILE ('-' for stdout)
	-o LOGFILE	Log messages to FILE
	-U STR		Use STR for User-Agent header
	-Y on/off	Use proxy

####################
# which
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: which COMMAND...

Locate COMMAND

####################
# whoami
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: whoami

Print the user name associated with the current effective user id

####################
# whois
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: whois [-i] [-h SERVER] [-p PORT] NAME...

Query WHOIS info about NAME

	-i	Show redirect results too
	-h,-p	Server to query

####################
# xargs
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: xargs [OPTIONS] [PROG ARGS]

Run PROG on every item given by stdin

	-0	Input is separated by NULs
	-a FILE	Read from FILE instead of stdin
	-r	Don't run command if input is empty
	-t	Print the command on stderr before execution
	-p	Ask user whether to run each command
	-E STR,-e[STR]	STR stops input processing
	-n N	Pass no more than N args to PROG
	-s N	Pass command line of no more than N bytes
	-P N	Run up to N PROGs in parallel
	-x	Exit if size is exceeded

####################
# xxd
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: xxd [-pri] [-g N] [-c N] [-n LEN] [-s OFS] [-o OFS] [FILE]

Hex dump FILE (or stdin)

	-g N		Bytes per group
	-c N		Bytes per line
	-p		Show only hex bytes, assumes -c30
	-i		C include file style
	-l LENGTH	Show only first LENGTH bytes
	-s OFFSET	Skip OFFSET bytes
	-o OFFSET	Add OFFSET to displayed offset
	-r		Reverse (with -p, assumes no offsets in input)

####################
# xz
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: xz -d [-cfk] [FILE]...

Decompress FILEs (or stdin)

	-d	Decompress
	-c	Write to stdout
	-f	Force
	-k	Keep input files
	-t	Test integrity

####################
# xzcat
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: xzcat [FILE]...

Decompress to stdout

####################
# yes
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: yes [STRING]

Repeatedly print a line with STRING, or 'y'

####################
# zcat
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: zcat [FILE]...

Decompress to stdout

####################
# zcip
####################
BusyBox v1.34.1-osm0sis (2021-10-02 04:33:49 ADT) multi-call binary.

Usage: zcip [OPTIONS] IFACE SCRIPT

Manage a ZeroConf IPv4 link-local address

	-f		Run in foreground
	-q		Quit after obtaining address
	-r 169.254.x.x	Request this address first
	-l x.x.0.0	Use this range instead of 169.254
	-v		Verbose

$LOGGING=none		Suppress logging
$LOGGING=syslog 	Log to syslog

With no -q, runs continuously monitoring for ARP conflicts,
exits only on I/O errors (link down etc)

